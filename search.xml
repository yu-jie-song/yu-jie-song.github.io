<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据库的好处</title>
      <link href="2021/05/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A5%BD%E5%A4%84/"/>
      <url>2021/05/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A5%BD%E5%A4%84/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库的好处"><a href="#数据库的好处" class="headerlink" title="数据库的好处"></a>数据库的好处</h2><p>1.可以持久化数据到本地</p><p>2.结构化查询</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11流程控制结构</title>
      <link href="2021/05/12/11%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/"/>
      <url>2021/05/12/11%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="流程控制结构"><a href="#流程控制结构" class="headerlink" title="流程控制结构"></a>流程控制结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">顺序结构：程序从上往下依次执行</span><br><span class="line">分支结构：程序从两条或多条路径中选择一条去执行</span><br><span class="line">循环结构：程序在满足一定条件的基础上，重复执行一段代码</span><br></pre></td></tr></table></figure><h3 id="一、分支结构"><a href="#一、分支结构" class="headerlink" title="一、分支结构"></a>一、分支结构</h3><h4 id="1-if函数"><a href="#1-if函数" class="headerlink" title="1.if函数"></a>1.if函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">功能：实现简单的双分支</span><br><span class="line">语法：</span><br><span class="line">if(表达式1，表达式2，表达式3)</span><br><span class="line">执行顺序：</span><br><span class="line">如果表达式1成立，则if函数返回表达式2的值，否则返回表达式3的值</span><br><span class="line">应用：任何地方</span><br></pre></td></tr></table></figure><h4 id="2-case结构"><a href="#2-case结构" class="headerlink" title="2.case结构"></a>2.case结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">特点：</span><br><span class="line">1.可以作为表达式，嵌套在其他语句中使用，可放在任何地方，begin end中或begin end的外面</span><br><span class="line">可以作为独立的语句去使用，只能放在begin end中</span><br><span class="line">2.如果when中的值满足或条件成立，则执行对应的then后面的语句，并且结束case</span><br><span class="line">如果都不满足，则执行else中的语句效果</span><br><span class="line">3.else可以省略，如果else省略了，并且所有when条件都不满足，则返回null</span><br></pre></td></tr></table></figure><h5 id="作为表达式"><a href="#作为表达式" class="headerlink" title="作为表达式"></a>作为表达式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">情况1：类似于Java中的switch语句，一般用于实现等值判断</span><br><span class="line">语法：</span><br><span class="line">case 变量|表达式|字段</span><br><span class="line">when 要判断的值 then 返回的值1</span><br><span class="line">when 要判断的值 then 返回的值2</span><br><span class="line">...</span><br><span class="line">else 要返回的值n</span><br><span class="line">end ;</span><br><span class="line">情况2：类似于Java中的多重if语句，一般用于实现区间判断</span><br><span class="line">语法：</span><br><span class="line">case</span><br><span class="line">when 要判断的条件1 then 返回的值1</span><br><span class="line">when 要判断的条件2 then 返回的值2</span><br><span class="line">...</span><br><span class="line">else 要返回的值n</span><br><span class="line">end ;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="作为独立的语句"><a href="#作为独立的语句" class="headerlink" title="作为独立的语句"></a>作为独立的语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">情况1：类似于Java中的switch语句，一般用于实现等值判断</span><br><span class="line">语法：</span><br><span class="line">case 变量|表达式|字段</span><br><span class="line">when 要判断的值 then 语句1;</span><br><span class="line">when 要判断的值 then 语句2;</span><br><span class="line">...</span><br><span class="line">else 语句n;</span><br><span class="line">end case;</span><br><span class="line">情况2：类似于Java中的多重if语句，一般用于实现区间判断</span><br><span class="line">语法：</span><br><span class="line">case</span><br><span class="line">when 要判断的条件1 then 语句1;</span><br><span class="line">when 要判断的条件2 then 语句2;</span><br><span class="line">...</span><br><span class="line">else 语句n;</span><br><span class="line">end case;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-if结构"><a href="#3-if结构" class="headerlink" title="3.if结构"></a>3.if结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">功能：实现多重分支</span><br><span class="line">语法：</span><br><span class="line">if 条件1 then 语句1;</span><br><span class="line">elseif 条件2 then 语句2;</span><br><span class="line">...</span><br><span class="line">【else 语句n;】</span><br><span class="line">end if;</span><br><span class="line"></span><br><span class="line">应用在begin end中</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">案例1：根据传入的成绩，来显示等级，比如传入的成绩：90-100，返回A</span><br><span class="line"></span><br><span class="line">create function test_if(score int) returns char</span><br><span class="line">begin </span><br><span class="line">if score&gt;&#x3D;90 and score&lt;&#x3D;100 then return &#39;A&#39;;</span><br><span class="line">elseif score&gt;&#x3D;80 then return &#39;B&#39;;</span><br><span class="line">elseif score&gt;&#x3D;60 then return &#39;C&#39;;</span><br><span class="line">else return &#39;D&#39;;</span><br><span class="line">end if;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><h3 id="二、循环结构"><a href="#二、循环结构" class="headerlink" title="二、循环结构"></a>二、循环结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">分类：</span><br><span class="line">while、loop、repeat</span><br><span class="line"></span><br><span class="line">循环控制：</span><br><span class="line">iterate类似于continue，继续，结束本次循环，继续下一次</span><br><span class="line">leave类似于break，跳出，结束当前所在的循环</span><br></pre></td></tr></table></figure><h4 id="1-while"><a href="#1-while" class="headerlink" title="1.while"></a>1.while</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">【标签：】while 循环条件 do</span><br><span class="line">循环体;</span><br><span class="line">end while 【标签】;</span><br></pre></td></tr></table></figure><h4 id="2-loop"><a href="#2-loop" class="headerlink" title="2.loop"></a>2.loop</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">【标签:】loop</span><br><span class="line">循环体;</span><br><span class="line">end loop 【标签】;</span><br><span class="line"></span><br><span class="line">可以用来模拟简单的死循环</span><br></pre></td></tr></table></figure><h4 id="3-repeat"><a href="#3-repeat" class="headerlink" title="3.repeat"></a>3.repeat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">【标签:】 repeat</span><br><span class="line">循环体;</span><br><span class="line">until 结束循环的条件</span><br><span class="line">end repeat 【标签】;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10存储过程和函数</title>
      <link href="2021/05/12/10%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/"/>
      <url>2021/05/12/10%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="存储过程和函数"><a href="#存储过程和函数" class="headerlink" title="存储过程和函数"></a>存储过程和函数</h2><p>select show desc</p><p>delete drop truncate</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">存储过程和函数：类似于Java中的方法</span><br><span class="line">好处：</span><br><span class="line">1.提高代码的重用性</span><br><span class="line">2.简化操作</span><br></pre></td></tr></table></figure><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">含义：一组预先编译好的sql语句的集合，理解成批处理语句</span><br><span class="line">好处：</span><br><span class="line">1.提高代码的重用性</span><br><span class="line">2.简化操作</span><br><span class="line">3.减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率</span><br></pre></td></tr></table></figure><h4 id="一、创建语法"><a href="#一、创建语法" class="headerlink" title="一、创建语法"></a>一、创建语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">create procedure 存储过程名(参数列表)</span><br><span class="line">begin</span><br><span class="line">存储过程体（一组合法SQL语句）</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">1.参数列表包含三部分</span><br><span class="line">参数模式 参数名 参数类型</span><br><span class="line">举例：</span><br><span class="line">in stuname varchar(20)</span><br><span class="line"></span><br><span class="line">参数模式：</span><br><span class="line">in：该参数可以作为输入，也就是该参数需要调用传入值</span><br><span class="line">out：该参数可以作为输出，也就是该参数可以作为返回值</span><br><span class="line">inout：该参数既可以作为输入又可以作为输出，也就是该参数既需要传入值，又可以返回值</span><br><span class="line"></span><br><span class="line">2.如果存储过程体仅仅只有一句话，begin end可以省略</span><br><span class="line">3.存储过程体中的每条sql语句的结尾要求必须加分号。</span><br><span class="line">存储过程的结尾可以使用delimiter重新设置</span><br><span class="line">语法：</span><br><span class="line">delimiter 结束标记</span><br><span class="line">案例：</span><br><span class="line">delimiter $</span><br></pre></td></tr></table></figure><h4 id="二、调用语法"><a href="#二、调用语法" class="headerlink" title="二、调用语法"></a>二、调用语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call 存储过程名(实参列表);</span><br></pre></td></tr></table></figure><h4 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h4><h5 id="1-空参列表"><a href="#1-空参列表" class="headerlink" title="1.空参列表"></a>1.空参列表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line">CREATE PROCEDURE myp1()</span><br><span class="line">BEGIN</span><br><span class="line">INSERT INTO admin(username,&#96;password&#96;) </span><br><span class="line">VALUES(&#39;john1&#39;,&#39;0000&#39;),(&#39;lily&#39;,&#39;0000&#39;),(&#39;rose&#39;,&#39;0000&#39;),(&#39;jack&#39;,&#39;0000&#39;);</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">CALL myp1();</span><br></pre></td></tr></table></figure><h5 id="2-带in参数模式的存储过程"><a href="#2-带in参数模式的存储过程" class="headerlink" title="2.带in参数模式的存储过程"></a>2.带in参数模式的存储过程</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">案例1：创建存储过程实现根据女神名，查询对应的男神信息</span><br><span class="line">create procedure myp2(in beautyName varchar(20))</span><br><span class="line">begin</span><br><span class="line">select bo.*</span><br><span class="line">from boys bo</span><br><span class="line">right join beauty b on bo.id&#x3D;b.boyfriend_id</span><br><span class="line">where b.name&#x3D;beautyName;</span><br><span class="line">end $</span><br><span class="line"></span><br><span class="line">#调用</span><br><span class="line">call myp2(&#39;柳岩&#39;);</span><br><span class="line"></span><br><span class="line">案例2：创建存储过程，判断用户是否登录成功</span><br><span class="line">create procedure myp2(in beautyName varchar(20))</span><br><span class="line">begin</span><br><span class="line">declare result int default &#39;&#39;;#声明并初始化</span><br><span class="line"></span><br><span class="line">select count(*) into result #赋值</span><br><span class="line">from admin</span><br><span class="line">where admin.username&#x3D;username</span><br><span class="line">and password &#x3D; password;</span><br><span class="line"></span><br><span class="line">select if(result&gt;0,&#39;成功&#39;,&#39;失败&#39;);#使用</span><br><span class="line">end $</span><br><span class="line"></span><br><span class="line">call myp3(&#39;张飞&#39;,&#39;8888&#39;);</span><br></pre></td></tr></table></figure><h5 id="3-创建带out模式的存储过程"><a href="#3-创建带out模式的存储过程" class="headerlink" title="3.创建带out模式的存储过程"></a>3.创建带out模式的存储过程</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">案例1：根据女神名，返回对应的男神名</span><br><span class="line">select procedure myp5(in bbeautyName varchar(20),out boyName varchar(20))</span><br><span class="line">begin</span><br><span class="line">select bo.boyName into boyName</span><br><span class="line">from boys bo</span><br><span class="line">inner join beauty b on bo.id &#x3D; b.boyfriend_id</span><br><span class="line">where b.name&#x3D;beautyName;</span><br><span class="line">end $</span><br><span class="line"></span><br><span class="line">#调用</span><br><span class="line">call myp5(&#39;小昭&#39;,@bName);</span><br><span class="line">select @bName;</span><br><span class="line"></span><br><span class="line">如果有两个返回值</span><br><span class="line">案例2：根据女神名，返回对应的男神名和男神魅力值</span><br><span class="line">create procedure myp6(in beautyName varchar(20),out boyName varchar(20),out userCP int)</span><br><span class="line">begin</span><br><span class="line">select bo.boyName,bo.userCP into boyName,userCP</span><br><span class="line">from boys bo</span><br><span class="line">inner join beauty b on bo.id&#x3D;b.boyfriend_id</span><br><span class="line">where b.name&#x3D;beautyName;</span><br><span class="line">end $</span><br><span class="line">调用</span><br><span class="line">call myp6(&#39;小昭&#39;,@bName,@usercp);</span><br><span class="line">select @b.Name,@userCP;</span><br></pre></td></tr></table></figure><h5 id="4-创建带inout模式参数的存储过程"><a href="#4-创建带inout模式参数的存储过程" class="headerlink" title="4.创建带inout模式参数的存储过程"></a>4.创建带inout模式参数的存储过程</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">案例1：传入a和b两个值，最终a和b都翻倍并返回</span><br><span class="line">create procedure myp8(inout a int, inout b int)</span><br><span class="line">begin</span><br><span class="line">set a&#x3D;a*2;</span><br><span class="line">set b&#x3D;b*2;</span><br><span class="line">end $</span><br><span class="line"></span><br><span class="line">set @m&#x3D;10;</span><br><span class="line">set @n&#x3D;20;</span><br><span class="line">call myp8(@m,@n);</span><br><span class="line">select @m,@n;</span><br></pre></td></tr></table></figure><h4 id="三、删除存储过程"><a href="#三、删除存储过程" class="headerlink" title="三、删除存储过程"></a>三、删除存储过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：drop procedure 存储过程名</span><br><span class="line">drop procedure p1;#不能删多个</span><br></pre></td></tr></table></figure><h4 id="四、查看存储过程的信息"><a href="#四、查看存储过程的信息" class="headerlink" title="四、查看存储过程的信息"></a>四、查看存储过程的信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create procedure myp2;</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">含义：一组预先编译好的sql语句的集合，理解成批处理语句</span><br><span class="line">好处：</span><br><span class="line">1.提高代码的重用性</span><br><span class="line">2.简化操作</span><br><span class="line">3.减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率</span><br><span class="line"></span><br><span class="line">区别：</span><br><span class="line">存储过程：可以有0个返回，也可以有多个返回，适合做批量的插入，批量的更新</span><br><span class="line">函数：只能有1个返回，适合做处理数据后返回一个结果</span><br></pre></td></tr></table></figure><h4 id="一、创建语法-1"><a href="#一、创建语法-1" class="headerlink" title="一、创建语法"></a>一、创建语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">create function 函数名(参数列表) returns 返回类型</span><br><span class="line">begin</span><br><span class="line">函数体</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">1.参数列表 包含两部分：</span><br><span class="line">参数名 参数类型</span><br><span class="line"></span><br><span class="line">2.函数体：肯定会有return语句，如果没有会报错</span><br><span class="line">如果return语句没有放在函数体的最后也不报错，但不建议</span><br><span class="line"></span><br><span class="line">return 值;</span><br><span class="line">3.函数体中仅有一句话，则可以省略begin end</span><br><span class="line">4.使用delimiter语句设置结束标记</span><br></pre></td></tr></table></figure><h4 id="二、调用语法-1"><a href="#二、调用语法-1" class="headerlink" title="二、调用语法"></a>二、调用语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 函数名(参数列表);</span><br></pre></td></tr></table></figure><h4 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1.无参有返回</span><br><span class="line">案例：返回公司的员工个数</span><br><span class="line">create function myf1() returns int</span><br><span class="line">begin</span><br><span class="line">declare c int default 0;#定义变量</span><br><span class="line">select count(*) into c#赋值</span><br><span class="line">from employees;</span><br><span class="line">return c;</span><br><span class="line">end $</span><br><span class="line"></span><br><span class="line">select myf1();</span><br><span class="line"></span><br><span class="line">2.有参有返回</span><br><span class="line">案例1：根据员工名返回它的工资</span><br><span class="line">create function myf2(empName varchar(20)) returns double</span><br><span class="line">begin</span><br><span class="line">set @sal&#x3D;0;#定义用户变量</span><br><span class="line">select salary into @sal#赋值</span><br><span class="line">from employees</span><br><span class="line">where last_name &#x3D; empName;</span><br><span class="line"></span><br><span class="line">return @sal;</span><br><span class="line">end $</span><br><span class="line"></span><br><span class="line">select myf2(&#39;Kochhar&#39;);</span><br></pre></td></tr></table></figure><h4 id="三、查看函数"><a href="#三、查看函数" class="headerlink" title="三、查看函数"></a>三、查看函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create function myf3;</span><br></pre></td></tr></table></figure><h4 id="四、删除函数"><a href="#四、删除函数" class="headerlink" title="四、删除函数"></a>四、删除函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop function myf3;</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9变量</title>
      <link href="2021/05/12/9%E5%8F%98%E9%87%8F/"/>
      <url>2021/05/12/9%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="系统变量："><a href="#系统变量：" class="headerlink" title="系统变量："></a>系统变量：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">说明：变量由系统提供，不是用户定义，属于服务器层面</span><br><span class="line">使用的语法：</span><br><span class="line">1.查看所有的系统变量</span><br><span class="line">show global|【session】 variables;</span><br><span class="line">2.查看满足条件的部分系统变量</span><br><span class="line">show global|【session】 variables like &#39;%char%&#39;;</span><br><span class="line">3.查看指定的某个系统变量的值</span><br><span class="line">select @@global|【session】.系统变量名;</span><br><span class="line">4.为某个系统变量赋值</span><br><span class="line">set global|【session】 系统变量名 &#x3D; 值;</span><br><span class="line">set @@global|【session】.系统变量名 &#x3D; 值：</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">如果是全局级别，则需要加global，如果是会话级别，则需要加session，如果不写，则默认是session</span><br></pre></td></tr></table></figure><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">作用域：服务器每次启动将为所有的全局变量赋初始值，针对于所有的会话（连接）有效，但不能跨重启</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.查看所有的全局变量</span><br><span class="line">show global variables;</span><br><span class="line">2.查看部分的全局变量</span><br><span class="line">show global variables like &#39;%char%&#39;;</span><br><span class="line">3.查看指定的全局变量的值</span><br><span class="line">select @@global.autocommit;</span><br><span class="line">show @@tx_isolation;</span><br><span class="line">4.为某个指定的全局变量赋值</span><br><span class="line">set @@global.autocommit&#x3D;0;</span><br></pre></td></tr></table></figure><h4 id="会话变量"><a href="#会话变量" class="headerlink" title="会话变量"></a>会话变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">作用域：仅仅针对于当前会话（连接）有效</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.查看所有的会话变量</span><br><span class="line">show session variables;</span><br><span class="line">show variables;</span><br><span class="line">2.查看部分的会话变量</span><br><span class="line">show variables like &#39;%char%&#39;;</span><br><span class="line">show session variables like &#39;%char%&#39;;</span><br><span class="line">3.查看指定的某个会话变量</span><br><span class="line">select @@tx_isolation;</span><br><span class="line">select @@session.tx_isolation;</span><br><span class="line">4.为某个会话变量赋值</span><br><span class="line">方式一：</span><br><span class="line">set @@session.tx_isolation&#x3D;&#39;read-uncommitted&#39;;</span><br><span class="line">set @@session.tx_isolation&#x3D;&#39;read-uncommitted&#39;;</span><br><span class="line">方式二：</span><br><span class="line">set session tx_isolation &#x3D; &#39;read-committed&#39;;</span><br></pre></td></tr></table></figure><h3 id="自定义变量："><a href="#自定义变量：" class="headerlink" title="自定义变量："></a>自定义变量：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">说明：变量是用户自定义的，不是由系统提供的</span><br><span class="line">使用步骤：</span><br><span class="line">声明</span><br><span class="line">赋值</span><br><span class="line">使用（查看、比较、运算等）</span><br></pre></td></tr></table></figure><h4 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作用域：针对于当前会话（连接）有效，同于会话变量的作用域</span><br><span class="line">应用在任何地方，也就是begin end里面或外面</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">赋值的操作符: &#x3D;或:&#x3D;</span><br><span class="line"></span><br><span class="line">1.声明并初始化</span><br><span class="line">set @用户变量名&#x3D;值;</span><br><span class="line">set @用户变量名:&#x3D;值;</span><br><span class="line">select @用户变量名:&#x3D;值;</span><br><span class="line"></span><br><span class="line">2.赋值（更新用户变量的值）</span><br><span class="line">方式一：通过set或select</span><br><span class="line">set @用户变量名&#x3D;值;</span><br><span class="line">set @用户变量名:&#x3D;值;</span><br><span class="line">select @用户变量名:&#x3D;值;</span><br><span class="line">方式二：通过select into</span><br><span class="line">select 字段 into @变量名</span><br><span class="line">from 表;</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">set @count&#x3D;1;</span><br><span class="line">select count(*) into @count</span><br><span class="line">from employees;</span><br><span class="line"></span><br><span class="line">3.使用（查看用户变量的值）</span><br><span class="line">select @用户变量名;</span><br></pre></td></tr></table></figure><h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作用域：仅仅在定义它的begin end中有效</span><br><span class="line">应用在begin end中的第一句话</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.声明</span><br><span class="line">declare 变量名 类型;</span><br><span class="line">declare 变量名 类型 default 值;</span><br><span class="line"></span><br><span class="line">2.赋值</span><br><span class="line">方式一：通过set或select</span><br><span class="line">set 局部变量名&#x3D;值;</span><br><span class="line">set 局部变量名:&#x3D;值;</span><br><span class="line">select @局部变量名:&#x3D;值;</span><br><span class="line">方式二：通过select into</span><br><span class="line">select 字段 into 局部变量名</span><br><span class="line">from 表;</span><br><span class="line"></span><br><span class="line">3.使用</span><br><span class="line">select 局部变量名：</span><br></pre></td></tr></table></figure><h4 id="用户变量pk局部变量"><a href="#用户变量pk局部变量" class="headerlink" title="用户变量pk局部变量"></a>用户变量pk局部变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作用域定义和使用的位置语法</span><br><span class="line">用户变量 当前会话会话中的任何地方必须加@符号，不用限定类型</span><br><span class="line">局部变量 begin end中只能在begin end中，且为第一句话一般不用@符号，需要限定类型</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8视图</title>
      <link href="2021/05/12/8%E8%A7%86%E5%9B%BE/"/>
      <url>2021/05/12/8%E8%A7%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">视图：mysql从5.0.1版本开始提供视图功能。一种虚拟存在的表，行和列的数据来自定义视图的查询中使用的表，并且是在使用视图时动态生成的，只保存了sql逻辑，不保存查询结果</span><br><span class="line"></span><br><span class="line">应用场景：</span><br><span class="line">多个地方用到同样的查询结果</span><br><span class="line">该查询结果使用的sql语句较复杂</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line">create view 视图名</span><br><span class="line">as</span><br><span class="line">查询语句;</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">create view my_v1</span><br><span class="line">as</span><br><span class="line">select studentname,majorname</span><br><span class="line">from students</span><br><span class="line">inner join major m</span><br><span class="line">on s.majorid&#x3D;m.majorid</span><br><span class="line">where s.majorid&#x3D;1;</span><br></pre></td></tr></table></figure><h3 id="一、视图的创建"><a href="#一、视图的创建" class="headerlink" title="一、视图的创建"></a>一、视图的创建</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">create view 视图名</span><br><span class="line">as</span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">案例：查询姓张的学生名和专业名</span><br><span class="line">select stuname,majorname</span><br><span class="line">from stuinfo s</span><br><span class="line">inner join major m on s.&#96;majorid&#96;&#x3D;m.&#96;id&#96;</span><br><span class="line">where s.&#96;stuname&#96; like &#39;张%&#39;;</span><br><span class="line"></span><br><span class="line">create view v1</span><br><span class="line">as</span><br><span class="line">select stuname,majorname</span><br><span class="line">from stuinfo s</span><br><span class="line">inner join major m on s.&#96;majorid&#96;&#x3D;m.&#96;id&#96;;</span><br><span class="line"></span><br><span class="line">select * from v1 where stuname like &#39;张%&#39;;</span><br></pre></td></tr></table></figure><p>视图的好处</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">重用sql语句</span><br><span class="line">简化了复杂的sql操作，不必知道它的查询细节</span><br><span class="line">保护数据，提高安全性</span><br></pre></td></tr></table></figure><h3 id="二、视图的修改"><a href="#二、视图的修改" class="headerlink" title="二、视图的修改"></a>二、视图的修改</h3><h4 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create or replace view 视图名</span><br><span class="line">as</span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure><h4 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter view 视图名</span><br><span class="line">as</span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure><h3 id="三、删除视图"><a href="#三、删除视图" class="headerlink" title="三、删除视图"></a>三、删除视图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法：drop view 视图名，视图名，···;</span><br></pre></td></tr></table></figure><h3 id="四、查看视图"><a href="#四、查看视图" class="headerlink" title="四、查看视图"></a>四、查看视图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">desc v1;</span><br><span class="line">show create view v1;</span><br><span class="line">命令行中：</span><br><span class="line">show create view v1;</span><br></pre></td></tr></table></figure><h3 id="五、视图的更新"><a href="#五、视图的更新" class="headerlink" title="五、视图的更新"></a>五、视图的更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">视图的可更新性和视图中查询的定义有关系，以下类型的视图是不能更新的。</span><br><span class="line">包含以下关键字的sql语句：分组函数、distinct、group by、having、union或者union all</span><br><span class="line">常量视图</span><br><span class="line">select中包含子查询</span><br><span class="line">join</span><br><span class="line">from一个不能更新的视图</span><br><span class="line">where子句的子查询引用了from子句的表</span><br></pre></td></tr></table></figure><h4 id="1-插入"><a href="#1-插入" class="headerlink" title="1.插入"></a>1.插入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into v1 values(&#39;张飞&#39;,&#39;zf@qq.com&#39;);</span><br></pre></td></tr></table></figure><h4 id="2-修改"><a href="#2-修改" class="headerlink" title="2.修改"></a>2.修改</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update v1 set last_name&#x3D;&#39;张无忌&#39; where last_name&#x3D;&#39;张飞&#39;;</span><br></pre></td></tr></table></figure><h4 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from v1 where last_name&#x3D;&#39;张无忌&#39;;</span><br></pre></td></tr></table></figure><h3 id="视图vs表"><a href="#视图vs表" class="headerlink" title="视图vs表"></a>视图vs表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建语法的关键字是否实际占用物理空间使用</span><br><span class="line">视图create view只是保存了sql逻辑增删改查，一般不能增删改</span><br><span class="line">表 create table 保存了数据增删改查</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7事务控制语言</title>
      <link href="2021/05/12/7TCL%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80/"/>
      <url>2021/05/12/7TCL%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="事务控制语言"><a href="#事务控制语言" class="headerlink" title="事务控制语言"></a>事务控制语言</h2><p>Transaction Control Language</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">事务：</span><br><span class="line">事务由单独单元的一个或多个SQL语句组成，在这个单元中，每个SQL语句是相互依赖的。而整个单独单元作为一个不可分割的整体，如果单元中某条SQL语句一旦执行失败或产生错误，整个单元将会回滚。所有受到影响的数据将返回到事务开始以前的状态；如果单元中的所有SQL语句均执行成功，则事务被顺利执行。</span><br><span class="line"></span><br><span class="line">存储引擎：（表类型）</span><br><span class="line">概念：在mysql中的数据用各种不同的技术存储在文件或内存中。</span><br><span class="line">通过show engines来查看mysql支持的存储于引擎。</span><br><span class="line">在mysql中用的最多的存储引擎有：innodb，myisam，memory等。其中innodb支持事务，而myisam、memory等不支持事务</span><br></pre></td></tr></table></figure><h3 id="事务的ACID-acid-属性："><a href="#事务的ACID-acid-属性：" class="headerlink" title="事务的ACID(acid)属性："></a>事务的ACID(acid)属性：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.原子性(Atomicity)</span><br><span class="line">原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生</span><br><span class="line">2.一致性(Consistency)</span><br><span class="line">事务必须使数据库从一个一致性状态变换到另外一个一致性状态</span><br><span class="line">3.隔离性(Isolation)</span><br><span class="line">事务的隔离性是指一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。</span><br><span class="line">4.持久性(Durability)</span><br><span class="line">持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来的其他操作和数据库故障不应该对其有任何影响</span><br></pre></td></tr></table></figure><h3 id="事物的创建"><a href="#事物的创建" class="headerlink" title="事物的创建"></a>事物的创建</h3><h4 id="隐式事务："><a href="#隐式事务：" class="headerlink" title="隐式事务："></a>隐式事务：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">事务没有明显的开启和结束的标记 比如insert、update、delete语句</span><br></pre></td></tr></table></figure><h4 id="显式事务："><a href="#显式事务：" class="headerlink" title="显式事务："></a>显式事务：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">事务具有明显的开启和结束的标记</span><br><span class="line">前提：必须先设置自动提交功能为禁用</span><br><span class="line">SET autocommit&#x3D;0;</span><br><span class="line">SHOW VARIABLES LIKE &#39;autocommit&#39;;</span><br></pre></td></tr></table></figure><h5 id="步骤一：开启事务"><a href="#步骤一：开启事务" class="headerlink" title="步骤一：开启事务"></a>步骤一：开启事务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SET autocommit&#x3D;0;</span><br><span class="line">start transaction;可选择</span><br></pre></td></tr></table></figure><h5 id="步骤二：编写事务中的sql语句-select-insert-update-delete"><a href="#步骤二：编写事务中的sql语句-select-insert-update-delete" class="headerlink" title="步骤二：编写事务中的sql语句(select insert update delete)"></a>步骤二：编写事务中的sql语句(select insert update delete)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语句1;</span><br><span class="line">语句2;</span><br><span class="line">···</span><br></pre></td></tr></table></figure><h5 id="步骤三：结束事务"><a href="#步骤三：结束事务" class="headerlink" title="步骤三：结束事务"></a>步骤三：结束事务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">commit;提交事务</span><br><span class="line">rollback;回滚事务</span><br></pre></td></tr></table></figure><h5 id="delete和truncate在事务使用时的区别"><a href="#delete和truncate在事务使用时的区别" class="headerlink" title="delete和truncate在事务使用时的区别"></a>delete和truncate在事务使用时的区别</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">delete可以回滚</span><br><span class="line">truncate不能回滚</span><br></pre></td></tr></table></figure><h5 id="演示事务的使用步骤"><a href="#演示事务的使用步骤" class="headerlink" title="演示事务的使用步骤"></a>演示事务的使用步骤</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#开启事务</span><br><span class="line">SET autocommit&#x3D;0;</span><br><span class="line">START TRANSACTION;</span><br><span class="line">#编写一组事务的语句</span><br><span class="line">UPDATE account SET balance &#x3D; 500 WHERE username &#x3D; &#39;张无忌&#39;;</span><br><span class="line">UPDATE account SET balance &#x3D; 1500 WHERE username &#x3D; &#39;赵敏&#39;;</span><br><span class="line">#结束事务</span><br><span class="line">ROLLBACK;</span><br><span class="line">COMMIT;</span><br><span class="line"></span><br><span class="line">SELECT * FROM account;</span><br></pre></td></tr></table></figure><h3 id="数据库的隔离级别"><a href="#数据库的隔离级别" class="headerlink" title="数据库的隔离级别"></a>数据库的隔离级别</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">对于同时运行的多个事务，当这些事务访问数据库中相同的数据时，如果没有采取必要的隔离机制，就会导致各种并发问题：</span><br><span class="line">脏读:对于两个事务T1，T2，T1读取了已经被T2更新但还没有被提交的字段之后，若T2回滚，T1读取的内容就是临时且无效的。</span><br><span class="line">不可重复读：对于两个事务T1，T2，T1读取了一个字段，然后T2更新了该字段之后，T1再次读取同一个字段，值就不同了。</span><br><span class="line">幻读：对于两个事务T1，T2，T1从一个表中读取了一个字段，然后T2在该表中插入了一些新的行。之后，如果T1再次读取同一个表，就会多出几行。</span><br><span class="line"></span><br><span class="line">数据库事物的隔离性：数据库系统必须具有隔离并发运行各个事务的能力，使它们不会相互影响，避免各种并发问题</span><br></pre></td></tr></table></figure><p>数据库提供的4种事务隔离级别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">隔离级别：</span><br><span class="line">read uncommitted(读未提交数据) 描述 ：允许事务读取未被其他事务提交的变更。脏读，不可重复读和幻读的问题都会出现</span><br><span class="line">read committed(读已提交数据) 描述：只允许事务读取已经被其它事务提交的变更。可以避免脏读，但不可重复读和幻读问题仍然可能出现</span><br><span class="line">repeatable read(可重复读) 描述：确保事务可以多次从一个字段中读取相同的值。在这个事务持续期间，禁止其他事务对这个字段进行更新。可以避免脏读和不可重复读，但幻读的问题仍然存在。</span><br><span class="line">serializable(串行化) 描述：确保事务可以从一个表中读取相同的行。在这个事务持续期间，禁止其他事务对该表执行插入，更新和删除操作，所有并发问题都可以避免，但性能十分低下。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">oracle 支持的2种事务隔离级别：read committed,serializable。oracle默认的事务隔离级别为：read committed</span><br><span class="line">mysql支持4种事务隔离级别。mysql默认的事务隔离级别为：repeatable read</span><br></pre></td></tr></table></figure><p>​        每启动一个mysql程序，就会获得一个单独的数据库连接，每个数据库连接都有一个全局变量@@tx_isolation，表示当前的事务隔离级别</p><p>查询当前的隔离级别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT  @@tx_isolation;</span><br></pre></td></tr></table></figure><p>设置当前mysql 连接的隔离级别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set session transaction isolation level read committed;</span><br></pre></td></tr></table></figure><p>设置数据系统的全局的隔离级别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global transaction isolation level read committed;</span><br></pre></td></tr></table></figure><h3 id="savepoint的使用"><a href="#savepoint的使用" class="headerlink" title="savepoint的使用"></a>savepoint的使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">set autocommit&#x3D;0;</span><br><span class="line">start transaction;</span><br><span class="line">delete from account where id&#x3D;25;</span><br><span class="line">savepoint a;#设置保存点</span><br><span class="line">delete from account where id&#x3D;28;</span><br><span class="line">roollvack to a;#回滚到保存点</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6DML语言的学习</title>
      <link href="2021/05/12/6DDL%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/05/12/6DDL%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="DDL语言的学习"><a href="#DDL语言的学习" class="headerlink" title="DDL语言的学习"></a>DDL语言的学习</h2><p>Data Define Language（数据定义语言）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">库和表的管理</span><br><span class="line">一、库的管理</span><br><span class="line">创建、修改、删除</span><br><span class="line">二、表的管理</span><br><span class="line">创建、修改、删除</span><br><span class="line"></span><br><span class="line">创建：create</span><br><span class="line">修改：alter</span><br><span class="line">删除：drop</span><br></pre></td></tr></table></figure><h3 id="一、库的管理"><a href="#一、库的管理" class="headerlink" title="一、库的管理"></a>一、库的管理</h3><h4 id="1-库的创建"><a href="#1-库的创建" class="headerlink" title="1.库的创建"></a>1.库的创建</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">create database [if not exists]库名;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">案例：创建库Books</span><br><span class="line">create database if not exists books;</span><br></pre></td></tr></table></figure><h4 id="2-库的修改"><a href="#2-库的修改" class="headerlink" title="2.库的修改"></a>2.库的修改</h4><p>更改库的字符集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter database books character set gbk;</span><br></pre></td></tr></table></figure><h4 id="3-库的删除"><a href="#3-库的删除" class="headerlink" title="3.库的删除"></a>3.库的删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database if exists books;</span><br></pre></td></tr></table></figure><h3 id="二、表的管理"><a href="#二、表的管理" class="headerlink" title="二、表的管理"></a>二、表的管理</h3><h4 id="1-表的创建"><a href="#1-表的创建" class="headerlink" title="1.表的创建"></a>1.表的创建</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table if not exists 表名(</span><br><span class="line">列名 列的类型【(长度)约束】,</span><br><span class="line">列名 列的类型【(长度)约束】,</span><br><span class="line">列名 列的类型【(长度)约束】,</span><br><span class="line">···</span><br><span class="line">列名 列的类型【(长度)约束】</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">案例：创建表book</span><br><span class="line">create table book(</span><br><span class="line">id int,&#x2F;&#x2F;编号</span><br><span class="line">        bName varchar(20),&#x2F;&#x2F;图书名</span><br><span class="line">        price double,&#x2F;&#x2F;价格</span><br><span class="line">        authorId int,&#x2F;&#x2F;作者</span><br><span class="line">        publishDate datetime,&#x2F;&#x2F;出版日期  </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">desc book;</span><br><span class="line"></span><br><span class="line">案例：创建表author</span><br><span class="line">create table author(</span><br><span class="line">id int,</span><br><span class="line">au_name varchar(20),</span><br><span class="line">nation varchar(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="2-表的修改"><a href="#2-表的修改" class="headerlink" title="2.表的修改"></a>2.表的修改</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add|drop|modify|change column 列名 【列类型 约束】</span><br></pre></td></tr></table></figure><h5 id="（1）修改列名"><a href="#（1）修改列名" class="headerlink" title="（1）修改列名"></a>（1）修改列名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table book change column publishDate pubDate datetime;&#x2F;&#x2F;这里column可以省略</span><br></pre></td></tr></table></figure><h5 id="（2）修改列的类型或约束"><a href="#（2）修改列的类型或约束" class="headerlink" title="（2）修改列的类型或约束"></a>（2）修改列的类型或约束</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table book modify column pubdate timestamp;</span><br></pre></td></tr></table></figure><h5 id="（3）添加新列"><a href="#（3）添加新列" class="headerlink" title="（3）添加新列"></a>（3）添加新列</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table author add column annual double;</span><br></pre></td></tr></table></figure><h5 id="（4）删除列"><a href="#（4）删除列" class="headerlink" title="（4）删除列"></a>（4）删除列</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table author drop column annual;</span><br></pre></td></tr></table></figure><h5 id="（5）修改表名"><a href="#（5）修改表名" class="headerlink" title="（5）修改表名"></a>（5）修改表名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table author rename to book_author;</span><br></pre></td></tr></table></figure><h4 id="3-表的删除"><a href="#3-表的删除" class="headerlink" title="3.表的删除"></a>3.表的删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists book_author;</span><br><span class="line"></span><br><span class="line">show tables;</span><br></pre></td></tr></table></figure><h4 id="4-通用的写法"><a href="#4-通用的写法" class="headerlink" title="4.通用的写法"></a>4.通用的写法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">drop database if exists 旧表名;</span><br><span class="line">create database 新库名;</span><br><span class="line"></span><br><span class="line">drop table if exists 旧表名;</span><br><span class="line">create table 表名();</span><br></pre></td></tr></table></figure><h4 id="5-表的复制"><a href="#5-表的复制" class="headerlink" title="5.表的复制"></a>5.表的复制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">insert into author values</span><br><span class="line">(1,&#39;村上春树&#39;,&#39;日本&#39;),</span><br><span class="line">(2,&#39;莫言&#39;,&#39;中国&#39;),</span><br><span class="line">(3,&#39;冯唐&#39;,&#39;中国&#39;),</span><br><span class="line">(4,&#39;金庸&#39;,&#39;中国&#39;);</span><br></pre></td></tr></table></figure><h5 id="1-仅仅复制表的结构"><a href="#1-仅仅复制表的结构" class="headerlink" title="(1)仅仅复制表的结构"></a>(1)仅仅复制表的结构</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table copy like author;</span><br></pre></td></tr></table></figure><h5 id="2-复制表的结构-数据"><a href="#2-复制表的结构-数据" class="headerlink" title="(2)复制表的结构+数据"></a>(2)复制表的结构+数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create table copy2</span><br><span class="line">select * from author;</span><br></pre></td></tr></table></figure><h5 id="3-只复制部分数据"><a href="#3-只复制部分数据" class="headerlink" title="(3)只复制部分数据"></a>(3)只复制部分数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table copy3</span><br><span class="line">select id,au_name</span><br><span class="line">from author</span><br><span class="line">where nation&#x3D;&#39;中国&#39;;</span><br></pre></td></tr></table></figure><h5 id="4-仅仅复制某些字段"><a href="#4-仅仅复制某些字段" class="headerlink" title="(4)仅仅复制某些字段"></a>(4)仅仅复制某些字段</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table copy4</span><br><span class="line">select id,au_name</span><br><span class="line">from author</span><br><span class="line">where 0;</span><br></pre></td></tr></table></figure><h3 id="三、常见的数据类型"><a href="#三、常见的数据类型" class="headerlink" title="三、常见的数据类型"></a>三、常见的数据类型</h3><p>原则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所选择的类型越简单越好，能保存数值的类型越小越好</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">数值型：</span><br><span class="line">整型</span><br><span class="line">小数：</span><br><span class="line">定点数</span><br><span class="line">浮点数</span><br><span class="line">字符型：</span><br><span class="line">较短的文本：char、varchar</span><br><span class="line">较长的文本：text、blob(较长的二进制数据)</span><br><span class="line">日期型：</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-整型"><a href="#1-整型" class="headerlink" title="1.整型"></a>1.整型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">分类：</span><br><span class="line">tinyint、smallint、mediumint、int&#x2F;integer、bigint</span><br><span class="line">12348</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">(1)如果不设置无符号还是有符号，默认是有符号，如果想设置无符号，需要添加unsigned关键字</span><br><span class="line">(2)如果插入的数值超出了整型的范围，会报out of range异常，并且插入临界值&#x2F;&#x2F;老版本这样，我的版本不会插入</span><br><span class="line">(3)如果不设置长度，会有默认的长度</span><br><span class="line">长度代表了显示的最大宽度，如果不够用会用0在左边填充，但必须搭配zerofill使用！</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">如何设置有符号和无符号</span><br><span class="line">create table tab_int(</span><br><span class="line">t1 int,</span><br><span class="line">t2 int unsigned</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">desc tab_int;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS tab_int;</span><br><span class="line">CREATE TABLE tab_int(</span><br><span class="line">t1 INT(7) ZEROFILL,</span><br><span class="line">t2 INT(7) ZEROFILL</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="2-小数"><a href="#2-小数" class="headerlink" title="2.小数"></a>2.小数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(1)浮点型</span><br><span class="line">float(M,D)</span><br><span class="line">double(M,D)</span><br><span class="line">(2)定点型</span><br><span class="line">dec(M,D)</span><br><span class="line">decimal(M,D)</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">(1)</span><br><span class="line">M：整数部位+小数部位</span><br><span class="line">D：小数部位</span><br><span class="line">(2)</span><br><span class="line">M和D都可以省略</span><br><span class="line">如果是decimal，则M默认为10，D默认为0</span><br><span class="line">如果是float和double，则会根据插入的数值的精度来决定精度</span><br><span class="line">(3)定点型的精确度较高，如果要求插入数值的精确度较高如货币运算等则考虑使用</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table tab_float(</span><br><span class="line">f1 float(5,2),</span><br><span class="line">f2 double(5,2),</span><br><span class="line">f3 decimal(5,2)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="3-字符型"><a href="#3-字符型" class="headerlink" title="3.字符型"></a>3.字符型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">较短的文本：</span><br><span class="line">char</span><br><span class="line">varchar</span><br><span class="line"></span><br><span class="line">较长的文本：</span><br><span class="line">text</span><br><span class="line">blob(较大的二进制)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">特点：</span><br><span class="line">写法M的意思 特点空间的耗费效率</span><br><span class="line">charchar(M)最大的字符数，可以省略，默认为1固定长度的字符比较耗费高</span><br><span class="line">varcharvarchar(M)最大的字符数，不可以省略可变长度的字符  比较节省  低</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">binary和varbinary类型</span><br><span class="line">用于保存较短的二进制</span><br><span class="line">说明：类似于char和varchar，不同的是它们包含二进制字符串而不包含非二进制字符串</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Enum类型</span><br><span class="line">用于保存枚举</span><br><span class="line">说明：又称为枚举类型要求插入的值必须属于列表中指定的值之一</span><br><span class="line">如果列表成员为1~255，则需要1个字节存储</span><br><span class="line">如果列表成员为255~65535，则需要2个字节存储</span><br><span class="line">最多需要65535个成员</span><br><span class="line">CREATE TABLE tab_char(</span><br><span class="line">c1 ENUM(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO tab_char values(&#39;a&#39;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">set类型</span><br><span class="line">用于保存集合</span><br><span class="line">说明：和enum类型类似，里面可以保存0~64个成员。和enum类型最大的区别是：set类型一次可以选取多个成员，而enum只能选一个根据成员个数不同，存储所占的字节也不同</span><br><span class="line">CREATE TABLE tab_set(</span><br><span class="line">c1 set(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO tab_set values(&#39;a,b&#39;);</span><br></pre></td></tr></table></figure><h4 id="4-日期型"><a href="#4-日期型" class="headerlink" title="4.日期型"></a>4.日期型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">字节最小值最大值</span><br><span class="line">date 41000-01-019999-12-31</span><br><span class="line">datetime 81000-01-01 00:00:009999-12-31 23:59:59</span><br><span class="line">timestamp 4197001010800012038年的某个时刻</span><br><span class="line">time 3-838:59:59838:59:59</span><br><span class="line">year 119012155</span><br><span class="line"></span><br><span class="line">1.timestamp支持的时间范围较小，取值范围：19700101080001--2038年的某个时间</span><br><span class="line">Datetime的取值范围：1000-1-1--9999-12-31</span><br><span class="line">2.timestamp和实际时区有关，更能反映实际的日期，而datetime则只能反映出插入时的当地时区</span><br><span class="line">3.timestamp的属性受Mysql版本和SQLMode的影响很大·</span><br></pre></td></tr></table></figure><h3 id="三、常见约束"><a href="#三、常见约束" class="headerlink" title="三、常见约束"></a>三、常见约束</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">字段名 字段类型 列级约束</span><br><span class="line">字段名 字段类型，</span><br><span class="line">表级约束</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">含义：一种限制，用于限制表中的数据，为了保证表中的数据的准确和可靠性</span><br><span class="line"></span><br><span class="line">分类：六大约束</span><br><span class="line"> NOT NULL:非空，用于保证该字段的值不能为空，比如姓名、学号等</span><br><span class="line"> DEFAULT:默认，用于保证该字段有默认值，比如性别</span><br><span class="line"> PRIMARY KEY:主键，用于保证该字段的值具有唯一性，并且非空，比如：学号、员工编号等</span><br><span class="line"> UNIQUE：唯一，用于保证该字段的值具有唯一性，可以为空，比如座位号</span><br><span class="line"> CHECK：检查约束【mysql中不支持】，比如年龄、性别</span><br><span class="line"> FOREIGN KEY:外键，用于限制两个表的关系，用于保证该字段的值必须来自于主表的关联列的值</span><br><span class="line"> 在从表添加外键约束，用于引用主表中某列的值，比如学生表的专业编号，员工表的部门编号，员工表的工种编号</span><br><span class="line"></span><br><span class="line">添加约束的时机：</span><br><span class="line">1.创建表时</span><br><span class="line">2.修改表时</span><br><span class="line"></span><br><span class="line">约束的添加分类：</span><br><span class="line">列级约束：</span><br><span class="line">六大约束语法上都支持，但外键约束没有效果</span><br><span class="line">表级约束</span><br><span class="line">除了非空、默认，其它的都支持</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">主键和唯一的大对比：</span><br><span class="line">保证唯一性是否允许为空一个表中可以有多少个是否允许组合</span><br><span class="line">主键√×至多有1个√，但不推荐</span><br><span class="line">唯一√√可以有多个√，但不推荐</span><br><span class="line"></span><br><span class="line">外键：</span><br><span class="line">1.要求在从表设置外键关系</span><br><span class="line">2.从表的外键列的类型和主表的关联列的类型要求一致或兼容，名称无要求</span><br><span class="line">3.主表的关联列必须是一个key(一般是主键或唯一)</span><br><span class="line">4.插入数据时，先插入主表，再插入从表</span><br><span class="line">删除数据时，先删除从表，在删除主表</span><br></pre></td></tr></table></figure><h4 id="1-创建表时添加约束"><a href="#1-创建表时添加约束" class="headerlink" title="1.创建表时添加约束"></a>1.创建表时添加约束</h4><h5 id="1-添加列级约束"><a href="#1-添加列级约束" class="headerlink" title="(1)添加列级约束"></a>(1)添加列级约束</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">直接在字段名和类型后面追加约束类型即可。</span><br><span class="line">只支持：默认、非空、主键、唯一</span><br><span class="line"></span><br><span class="line">CREATE TABLE stuinfo(</span><br><span class="line">id INT PRIMARY KEY,#主键</span><br><span class="line">stuName VARCHAR(20) NOT NULL,#非空</span><br><span class="line">gender CHAR(1) CHECK(gender&#x3D;&#39;男&#39; OR gender&#x3D;&#39;女&#39;),#检查</span><br><span class="line">seat INT UNIQUE,#唯一</span><br><span class="line">age INT DEFAULT 18,#默认约束</span><br><span class="line">majorId INT REFERENCES major(id)#外键</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CREATE TABLE major(</span><br><span class="line">id INT PRIMARY KEY,</span><br><span class="line">majorName VARCHAR(20)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="2-添加表级约束"><a href="#2-添加表级约束" class="headerlink" title="(2)添加表级约束"></a>(2)添加表级约束</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">在各个字段的最下面</span><br><span class="line">【constraint 约束名】 约束类型（字段名）</span><br><span class="line"></span><br><span class="line">CREATE TABLE stuinfo(</span><br><span class="line">id INT ,</span><br><span class="line">stuName VARCHAR(20) ,</span><br><span class="line">gender CHAR(1) ,</span><br><span class="line">seat INT ,</span><br><span class="line">age INT ,</span><br><span class="line">majorId INT,</span><br><span class="line"></span><br><span class="line">CONSTRAINT pk PRIMARY KEY(id),#主键</span><br><span class="line">CONSTRAINT uq UNIQUE(seat),#唯一键</span><br><span class="line">CONSTRAINT ck CHECK(gender&#x3D;&#39;男&#39;OR gender&#x3D;&#39;女&#39;),#检查</span><br><span class="line">CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id)#外键</span><br><span class="line">);</span><br><span class="line">或</span><br><span class="line">CREATE TABLE stuinfo(</span><br><span class="line">id INT ,</span><br><span class="line">stuName VARCHAR(20) ,</span><br><span class="line">gender CHAR(1) ,</span><br><span class="line">seat INT ,</span><br><span class="line">age INT ,</span><br><span class="line">majorId INT,</span><br><span class="line"></span><br><span class="line">PRIMARY KEY(id),#主键</span><br><span class="line">UNIQUE(seat),#唯一键</span><br><span class="line">CHECK(gender&#x3D;&#39;男&#39;OR gender&#x3D;&#39;女&#39;),#检查</span><br><span class="line">FOREIGN KEY(majorid) REFERENCES major(id)#外键</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="3-通用的写法："><a href="#3-通用的写法：" class="headerlink" title="(3)通用的写法："></a>(3)通用的写法：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS stuinfo(</span><br><span class="line">id INT PRIMARY KEY,</span><br><span class="line">stuname VARCHAR(20) NOT NULL ,</span><br><span class="line">sex CHAR(1),</span><br><span class="line">age INT DEFAULT 18,</span><br><span class="line">seat INT UNIQUE,</span><br><span class="line">majorId INT,</span><br><span class="line"></span><br><span class="line">CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorId) REFERENCES major(id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="2-修改表时添加约束"><a href="#2-修改表时添加约束" class="headerlink" title="2.修改表时添加约束"></a>2.修改表时添加约束</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.添加列级约束</span><br><span class="line">alter table 表名 modify column 字段名 字段类型 新约束;</span><br><span class="line">2.添加表级约束</span><br><span class="line">alter table 表名 add 【constraint 约束名】 约束类型(字段名)　【外键的引用】;</span><br></pre></td></tr></table></figure><h5 id="1-添加非空约束"><a href="#1-添加非空约束" class="headerlink" title="(1)添加非空约束"></a>(1)添加非空约束</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table stuinfo modify column stuname varchar(20) not null;</span><br></pre></td></tr></table></figure><h5 id="2-添加默认约束"><a href="#2-添加默认约束" class="headerlink" title="(2)添加默认约束"></a>(2)添加默认约束</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table stuinfo modify column age int default 18;</span><br></pre></td></tr></table></figure><h5 id="3-添加主键"><a href="#3-添加主键" class="headerlink" title="(3)添加主键"></a>(3)添加主键</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">列级约束</span><br><span class="line">alter table stuinfo modify column id int primary key;</span><br><span class="line">表级约束</span><br><span class="line">alter table stuinfo add primary key(id);</span><br></pre></td></tr></table></figure><h5 id="4-添加唯一"><a href="#4-添加唯一" class="headerlink" title="(4)添加唯一"></a>(4)添加唯一</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">列级约束</span><br><span class="line">alter table stuinfo modify column seat int unique;</span><br><span class="line">表级约束</span><br><span class="line">alter table stuinfo add unique(seat);</span><br></pre></td></tr></table></figure><h5 id="5-添加外键"><a href="#5-添加外键" class="headerlink" title="(5)添加外键"></a>(5)添加外键</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table stuinfo add 【constraint fk_stuinfo_major】 foreign key(majorid) references major(id);</span><br></pre></td></tr></table></figure><h4 id="3-修改表时删除约束"><a href="#3-修改表时删除约束" class="headerlink" title="3.修改表时删除约束"></a>3.修改表时删除约束</h4><h5 id="1-删除非空约束"><a href="#1-删除非空约束" class="headerlink" title="(1)删除非空约束"></a>(1)删除非空约束</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table stuinfo modify columm stuname varchar(20) null;</span><br></pre></td></tr></table></figure><h5 id="2-删除默认约束"><a href="#2-删除默认约束" class="headerlink" title="(2)删除默认约束"></a>(2)删除默认约束</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table stuinfo modify column age int;</span><br></pre></td></tr></table></figure><h5 id="3-删除主键"><a href="#3-删除主键" class="headerlink" title="(3)删除主键"></a>(3)删除主键</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table stuinfo modify column id int;</span><br><span class="line">alter table stuinfo drop primary key;</span><br></pre></td></tr></table></figure><h5 id="4-删除唯一"><a href="#4-删除唯一" class="headerlink" title="(4)删除唯一"></a>(4)删除唯一</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table stuinfo drop index seat;</span><br></pre></td></tr></table></figure><h5 id="5-删除外键"><a href="#5-删除外键" class="headerlink" title="(5)删除外键"></a>(5)删除外键</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table stuinfo drop foreign key majorid;</span><br></pre></td></tr></table></figure><h3 id="四、标识列"><a href="#四、标识列" class="headerlink" title="四、标识列"></a>四、标识列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">又称为自增长列</span><br><span class="line">含义：可以不用手动的插入值，系统提供默认的序列值</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">1.表示列必须和主键搭配吗？ 不一定，但要求是一个key</span><br><span class="line">2.一个表中可以有多少标识列？ 至多一个</span><br><span class="line">3.标识列的类型只能是数值型</span><br><span class="line">4.标识列可以通过SET auto_increment_increment&#x3D;3;设置步长</span><br><span class="line">可以通过 手动插入值，设置起始值</span><br></pre></td></tr></table></figure><h4 id="1-创建表时设置标识列"><a href="#1-创建表时设置标识列" class="headerlink" title="1.创建表时设置标识列"></a>1.创建表时设置标识列</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE tab_identity(</span><br><span class="line">id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">NAME VARCHAR(20)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO tab_identity VALUES(NULL,&#39;john&#39;);</span><br><span class="line">或</span><br><span class="line">INSERT INTO tab_identity(NAME) VALUES(&#39;john&#39;);</span><br><span class="line"></span><br><span class="line">调整步长：</span><br><span class="line">SHOW VARIABLES LIKE &#39;%auto_increment%&#39;;</span><br><span class="line">SET auto_increment_increment&#x3D;1;</span><br></pre></td></tr></table></figure><h4 id="2-修改表时设置标识列"><a href="#2-修改表时设置标识列" class="headerlink" title="2.修改表时设置标识列"></a>2.修改表时设置标识列</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table tab_identity modify column id int primary key auto_increment;</span><br></pre></td></tr></table></figure><h4 id="3-修改表时删除标识列"><a href="#3-修改表时删除标识列" class="headerlink" title="3.修改表时删除标识列"></a>3.修改表时删除标识列</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table tab_identity modify column id int;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5DML语言的学习</title>
      <link href="2021/05/12/5DML%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/05/12/5DML%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="DML语言的学习"><a href="#DML语言的学习" class="headerlink" title="DML语言的学习"></a>DML语言的学习</h2><p>Data Manipulation Language(增删改)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据操作语言:</span><br><span class="line">插入：insert</span><br><span class="line">修改：update</span><br><span class="line">删除：delete</span><br></pre></td></tr></table></figure><h3 id="一、插入语句"><a href="#一、插入语句" class="headerlink" title="一、插入语句"></a>一、插入语句</h3><h4 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">insert into 表名(列名,···) values(值1，···);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.插入的值的类型要与列的类型一致或兼容</span><br><span class="line">insert into beauty(id,name,sex,borndate,phone,photo,boyfriend_id)</span><br><span class="line">values(13,&#39;唐艺昕&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;189888888&#39;,NULL,2);</span><br><span class="line"></span><br><span class="line">2.可以为null的列如何插入值</span><br><span class="line">方式一：</span><br><span class="line">insert into beauty(id,name,sex,borndate,phone,photo,boyfriend_id)</span><br><span class="line">values(13,&#39;唐艺昕&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;189888888&#39;,NULL,2);</span><br><span class="line">方式二：photo</span><br><span class="line">insert into beauty(id,name,sex,borndate,phone,boyfriend_id)</span><br><span class="line">values(13,&#39;唐艺昕&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;189888888&#39;,2);</span><br><span class="line"></span><br><span class="line">3.列的顺序可以调换</span><br><span class="line">insert into beauty(name,sex,id,phone)</span><br><span class="line">values(&#39;蒋欣&#39;,&#39;女&#39;,14,&#39;110&#39;)</span><br><span class="line"></span><br><span class="line">4.列数和值的个数必须一致</span><br><span class="line">insert into beauty(name,sex,id,phone,boyfriend_id)</span><br><span class="line">values(&#39;关晓彤&#39;,&#39;女&#39;,17,&#39;110&#39;);</span><br><span class="line"></span><br><span class="line">5.可以省略列名，默认所有列，而且列的顺序和表中列的顺序一致</span><br><span class="line">insert into beauty</span><br><span class="line">values(18,&#39;张飞&#39;,&#39;男&#39;,NULL,&#39;119&#39;,NULL,NULL)</span><br></pre></td></tr></table></figure><h4 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">insert into 表名</span><br><span class="line">set 列名&#x3D;值,列名&#x3D;值,···</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into beauty</span><br><span class="line">set id&#x3D;19,name&#x3D;&#39;刘涛&#39;,phone&#x3D;&#39;999&#39;;</span><br></pre></td></tr></table></figure><h4 id="两种方式大pk"><a href="#两种方式大pk" class="headerlink" title="两种方式大pk"></a>两种方式大pk</h4><p>1.方式一支持插入多行,方式二不支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into beauty</span><br><span class="line">values(23,&#39;唐艺昕1&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;18988888&#39;,NULL,2),</span><br><span class="line">(24,&#39;唐艺昕2&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;18988888&#39;,NULL,2),</span><br><span class="line">(25,&#39;唐艺昕3&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;18988888&#39;,NULL,2);</span><br></pre></td></tr></table></figure><p>2.方式一支持子查询，方式二不支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into beauty(id,name,phone)</span><br><span class="line">select 26,&#39;宋茜&#39;,&#39;11809866&#39;;</span><br></pre></td></tr></table></figure><h3 id="二、修改语句"><a href="#二、修改语句" class="headerlink" title="二、修改语句"></a>二、修改语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1.修改单表的记录*</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line">update 表名 一</span><br><span class="line">set 列&#x3D;新值,列&#x3D;新值,···三</span><br><span class="line">where 筛选条件;二</span><br><span class="line"></span><br><span class="line">2.修改多表的记录【补充】</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line">sql92语法</span><br><span class="line">update 表1 别名,表2 别名</span><br><span class="line">set 列&#x3D;值,···</span><br><span class="line">where 连接条件</span><br><span class="line">and 筛选条件;</span><br><span class="line"></span><br><span class="line">sql99语法:</span><br><span class="line">update 表1 别名</span><br><span class="line">inner|left|right join 表2 别名</span><br><span class="line">on 连接条件</span><br><span class="line">set 列&#x3D;值,···</span><br><span class="line">where 筛选条件</span><br></pre></td></tr></table></figure><h4 id="修改单表的记录"><a href="#修改单表的记录" class="headerlink" title="修改单表的记录"></a>修改单表的记录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">案例1：修改beauty表中姓唐的女神的电话为13898888</span><br><span class="line">update beauty set phone &#x3D; &#39;13898888&#39;</span><br><span class="line">where name like &#39;唐%&#39;</span><br><span class="line"></span><br><span class="line">案例2：修改boys表中id号为2的名称为张飞，魅力值10</span><br><span class="line">update boys set boyname&#x3D;&#39;张飞&#39;,usercp&#x3D;10</span><br><span class="line">where id &#x3D; 2;</span><br></pre></td></tr></table></figure><h4 id="修改多表的记录"><a href="#修改多表的记录" class="headerlink" title="修改多表的记录"></a>修改多表的记录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">案例1:修改张无忌的女朋友的手机号为114</span><br><span class="line">update boys bo</span><br><span class="line">inner join beauty b on bo.&#96;id&#96;&#x3D;b.&#96;boyfriend_id&#96;</span><br><span class="line">set b.&#96;phone&#96;&#x3D;114</span><br><span class="line">where bo.&#96;boyName&#96;&#x3D;&#39;张无忌&#39;;</span><br><span class="line"></span><br><span class="line">案例2：修改没有男朋友的女神的男朋友编号都为2号</span><br><span class="line">update boys bo</span><br><span class="line">right join beauty b on bo.&#96;id&#96;&#x3D;b.&#96;boyfriend_id&#96;</span><br><span class="line">set b.&#96;boyfriend_id&#96;&#x3D;2</span><br><span class="line">where bo.&#96;id&#96; is null;</span><br></pre></td></tr></table></figure><h3 id="三、删除语句"><a href="#三、删除语句" class="headerlink" title="三、删除语句"></a>三、删除语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">方式一：delete</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line">1、单表的删除*</span><br><span class="line">delete from 表名 where 筛选条件</span><br><span class="line"></span><br><span class="line">2、多表的删除【补充】</span><br><span class="line"></span><br><span class="line">sql92语法：</span><br><span class="line">delete 表1的别名，表2的别名</span><br><span class="line">from 表1 别名,表2 别名</span><br><span class="line">where 连接条件</span><br><span class="line">and 筛选条件;</span><br><span class="line"></span><br><span class="line">sql99语法：</span><br><span class="line">delete 表1的别名，表2的别名</span><br><span class="line">from 表1 别名</span><br><span class="line">inner|left|right join 表2 别名 on 连接条件</span><br><span class="line">where 筛选条件;</span><br><span class="line"></span><br><span class="line">方式二：truncate</span><br><span class="line"></span><br><span class="line">语法：truncate table 表名;</span><br></pre></td></tr></table></figure><h4 id="方式一：delete"><a href="#方式一：delete" class="headerlink" title="方式一：delete"></a>方式一：delete</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.单表的删除</span><br><span class="line">案例1：删除手机号以9结尾的女神信息</span><br><span class="line"></span><br><span class="line">delete from beauty where phone like &#39;%9&#39;;</span><br><span class="line">select * from beauty;</span><br><span class="line"></span><br><span class="line">2.多表的删除</span><br><span class="line">案例：删除张无忌的女朋友的信息</span><br><span class="line">delete b</span><br><span class="line">from beauty b</span><br><span class="line">inner join boys bo on b.&#96;boyfriend_id&#96;&#x3D;bo.&#96;id&#96;</span><br><span class="line">where bo.&#96;boyName&#96;&#x3D;&#39;张无忌&#39;;</span><br><span class="line"></span><br><span class="line">案例：删除黄晓明的信息以及他女朋友的信息</span><br><span class="line">delete b,bo</span><br><span class="line">from beauty b</span><br><span class="line">inner join boys bo on b.&#96;boyfriend_id&#96;&#x3D;bo.&#96;id&#96;</span><br><span class="line">where bo.&#96;boyName&#96;&#x3D;&#39;黄晓明&#39;;</span><br></pre></td></tr></table></figure><h4 id="方式二：truncate语句"><a href="#方式二：truncate语句" class="headerlink" title="方式二：truncate语句"></a>方式二：truncate语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">案例：删除男神表中全部信息</span><br><span class="line">truncate table boys;</span><br></pre></td></tr></table></figure><h4 id="delete-pk-truncate"><a href="#delete-pk-truncate" class="headerlink" title="delete pk truncate"></a>delete pk truncate</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.delete可以加where 条件，truncate不能加</span><br><span class="line">2.truncate删除，效率高一丢丢</span><br><span class="line">3.假如要删除的表中有增长列，如果用delete删除后，再插入数据，自增长列的值从断点开始，而truncate删除后，再插入数据，自增长列的值从1开始</span><br><span class="line">4.truncate删除没有返回值，delete删除有返回值</span><br><span class="line">5.truncate删除不能回滚，delete删除可以回滚</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4DQL语言的学习</title>
      <link href="2021/05/12/4DQL%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/05/12/4DQL%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="DQL语言的学习"><a href="#DQL语言的学习" class="headerlink" title="DQL语言的学习"></a>DQL语言的学习</h2><p>Data Query Language</p><h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><p>​    1.查询列表可以是：表中的**<em>字段、常量值、表达式、函数**</em></p><p>​    2.查询的结果是一个虚拟的表格</p><h3 id="基础查询-select"><a href="#基础查询-select" class="headerlink" title="基础查询 select"></a>基础查询 select</h3><pre><code>语法：    select        查询列表    from        表名</code></pre><h4 id="查询表中的单个字段"><a href="#查询表中的单个字段" class="headerlink" title="查询表中的单个字段"></a>查询表中的单个字段</h4><pre><code>SELECT  last_name FROM  employees ;</code></pre><h4 id="查询表中的多个字段"><a href="#查询表中的多个字段" class="headerlink" title="查询表中的多个字段"></a>查询表中的多个字段</h4><p><strong><em>注意：可以在字段上加``（着重号）表示这是个字段用来与关键字相区分</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">  last_name,</span><br><span class="line">  salary,</span><br><span class="line">  email </span><br><span class="line">FROM</span><br><span class="line">  employees ;</span><br><span class="line">或：</span><br><span class="line">SELECT </span><br><span class="line">  &#96;last_name&#96;,</span><br><span class="line">  &#96;email&#96;,</span><br><span class="line">  &#96;job_id&#96;</span><br><span class="line">FROM</span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure><h4 id="查询表中的所有字段"><a href="#查询表中的所有字段" class="headerlink" title="查询表中的所有字段"></a>查询表中的所有字段</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">  * </span><br><span class="line">FROM</span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure><h4 id="查询常量值"><a href="#查询常量值" class="headerlink" title="查询常量值"></a>查询常量值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT 100;</span><br><span class="line">SELECT &#39;john&#39;;</span><br></pre></td></tr></table></figure><h4 id="查询表达式"><a href="#查询表达式" class="headerlink" title="查询表达式"></a>查询表达式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 100*98;</span><br></pre></td></tr></table></figure><h4 id="查询函数"><a href="#查询函数" class="headerlink" title="查询函数"></a>查询函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT VERSION();</span><br></pre></td></tr></table></figure><h4 id="起别名"><a href="#起别名" class="headerlink" title="起别名"></a>起别名</h4><p>1.便于理解</p><p>2.如果要查询的字段有重名的情况，使用别名可以区分开来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">方式一：使用as</span><br><span class="line">SELECT 100%98 AS 结果;</span><br><span class="line"></span><br><span class="line">SELECT </span><br><span class="line">  last_name AS 姓,</span><br><span class="line">  first_name AS 名</span><br><span class="line">FROM</span><br><span class="line">  employees;</span><br><span class="line"> </span><br><span class="line">方式二：使用空格</span><br><span class="line">SELECT </span><br><span class="line">  last_name 姓,</span><br><span class="line">  first_name 名 </span><br><span class="line">FROM</span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure><p>3.案例：查询salary，显示结果为out put</p><p>中间有特殊符号，如空格，#等，建议将别名加上双引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">  salary AS &quot;out put&quot;</span><br><span class="line">FROM</span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure><h4 id="去重DISTINCT"><a href="#去重DISTINCT" class="headerlink" title="去重DISTINCT"></a>去重DISTINCT</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT &#x2F;&#x2F;查询员工名和姓连接成一个字段，并显示为姓名</span><br><span class="line">  &#96;department_id&#96; </span><br><span class="line">FROM</span><br><span class="line">  &#96;employees&#96; ;</span><br></pre></td></tr></table></figure><h4 id="号的作用"><a href="#号的作用" class="headerlink" title="+号的作用"></a>+号的作用</h4><p>仅仅只有一个功能：运算符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select 100+90;两个操作数都为数值型,则做加法运算</span><br><span class="line">select &#39;123&#39;+90;其中一方为字符型,试图将字符型数值转换成数值型</span><br><span class="line">如果转换成功，则继续做加法运算</span><br><span class="line">如果转换失败，则将字符型数值转换成0</span><br><span class="line">select null+10;只要其中一方为null，则结果肯定为null</span><br></pre></td></tr></table></figure><h4 id="使用concat实现连接"><a href="#使用concat实现连接" class="headerlink" title="使用concat实现连接"></a>使用concat实现连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select concat(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;) as 结果;</span><br><span class="line"></span><br><span class="line">select</span><br><span class="line">concat(last_name,first_name) as 姓名;</span><br><span class="line">from</span><br><span class="line">employees;</span><br></pre></td></tr></table></figure><h4 id="IFNULL"><a href="#IFNULL" class="headerlink" title="IFNULL"></a>IFNULL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT IFNULL(commission_pct,0) FROM employees;</span><br></pre></td></tr></table></figure><h3 id="条件查询-where"><a href="#条件查询-where" class="headerlink" title="条件查询 where"></a>条件查询 where</h3><p><strong>注意：where后面不支持别名，但其他的后面支持别名</strong></p><pre><code>语法：    select        查询列表        三    from        表名            一    where        筛选条件;        二分类：    一、按条件表达式筛选        条件运算符：&gt;,&lt;,=,!=,&lt;&gt;,&gt;=,&lt;=    二、按逻辑表达式筛选        作用：用于连接条件表达式        逻辑运算符：&amp;&amp;,||,!,                and,or,not//推荐    三、模糊查询                like                between and                in                is nullselect        last_name,        department_idfrom        employeeswhere        department_id&lt;&gt;90;</code></pre><h4 id="in"><a href="#in" class="headerlink" title="in"></a>in</h4><p>查询员工的工种编号是IT_PORT、AD_VP、AD_PRES中的一个员工名和工种编号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">last_name,</span><br><span class="line">job_id</span><br><span class="line">from</span><br><span class="line">employees</span><br><span class="line">where</span><br><span class="line">job_id &#x3D; &#39;IT_PROT&#39; or job_id &#x3D; &#39;AD_VD&#39; OR job_id&#x3D;&#39;AD_PRES&#39;;</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">select</span><br><span class="line">last_name,</span><br><span class="line">job_id</span><br><span class="line">from</span><br><span class="line">employees</span><br><span class="line">where</span><br><span class="line">job_id in( &#39;IT_PROT&#39; , job_id &#x3D; &#39;AD_VD&#39; , job_id&#x3D;&#39;AD_PRES&#39;);</span><br></pre></td></tr></table></figure><h4 id="is-null"><a href="#is-null" class="headerlink" title="is null"></a>is null</h4><p>注意：=或&lt;&gt;不能用于判断null值</p><p>is null 或 is not null 可以判断null值</p><h4 id="安全等于-lt-gt"><a href="#安全等于-lt-gt" class="headerlink" title="安全等于&lt;=&gt;"></a>安全等于&lt;=&gt;</h4><p>查询没有奖金的员工名和奖金率</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line">from</span><br><span class="line">employees</span><br><span class="line">where</span><br><span class="line">commission_pct&lt;&#x3D;&gt;NULL;</span><br></pre></td></tr></table></figure><h4 id="is-null-pk-lt-gt"><a href="#is-null-pk-lt-gt" class="headerlink" title="is null pk &lt;=&gt;"></a>is null pk &lt;=&gt;</h4><p>is null:仅仅可以判断NULL值，可读性较高</p><p>&lt;=&gt;:    既可以判断NULL值，又可以判断普通的数值，可读性较低</p><h3 id="排序查询-order-by"><a href="#排序查询-order-by" class="headerlink" title="排序查询 order by"></a>排序查询 order by</h3><p>特点：</p><p>asc代表升序，desc代表降序，如果不写，默认是升序</p><p>order by子句中可以支持单个字段、多个字段、表达式、函数、别名</p><p>order by 子句一般是放在查询语句的最后面，limit子句除外</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">select 查询列表三</span><br><span class="line">from 表一</span><br><span class="line">【where 筛选条件】二</span><br><span class="line">order by 排序列表 【asc|desc】四</span><br></pre></td></tr></table></figure><p>查询员工信息，要求工资从高到低排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from employees order by salary desc;</span><br></pre></td></tr></table></figure><p>查询员工信息，要求工资从低到高排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from employees order by salary asc;</span><br></pre></td></tr></table></figure><p>查询员工信息，要求先按工资升序，再按员工编号降序【按多个字段排序】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select *</span><br><span class="line">from employees</span><br><span class="line">order by salary asc,employee_id desc;</span><br></pre></td></tr></table></figure><h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><p>概念：类似于Java的方法，将一组逻辑语句封装在方法体中，对外暴露方法名</p><p>好处：1、隐藏了实现细节    2、提高代码的重用性</p><p>分类：</p><p>​            1、单行函数：concat、length、ifnull等</p><p>​            2、分组函数：功能：做统计用，又称为统计函数、聚合函数、组函数</p><p>调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 函数名(实参列表) 【from 表】;</span><br></pre></td></tr></table></figure><h4 id="单行函数"><a href="#单行函数" class="headerlink" title="单行函数"></a>单行函数</h4><h5 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h5><h6 id="1-length获取参数值的字节个数"><a href="#1-length获取参数值的字节个数" class="headerlink" title="1.length获取参数值的字节个数"></a>1.length获取参数值的字节个数</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select length(&#39;john&#39;);</span><br><span class="line">select length(&#39;张三丰hahaha&#39;);</span><br></pre></td></tr></table></figure><h6 id="2-concat拼接字符串"><a href="#2-concat拼接字符串" class="headerlink" title="2.concat拼接字符串"></a>2.concat拼接字符串</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select concat(last_name,&#39;_&#39;,first_name) from employees;</span><br></pre></td></tr></table></figure><h6 id="3-upper、lower"><a href="#3-upper、lower" class="headerlink" title="3.upper、lower"></a>3.upper、lower</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select upper(&#39;john&#39;);变大写</span><br><span class="line">select lower(&#39;joHn&#39;);变小写</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将姓变大写，名变小写，然后拼接</span><br><span class="line">select concat(upper(last_name),lower(first_name)) 姓名 from employees;</span><br></pre></td></tr></table></figure><h6 id="4-substr、substring"><a href="#4-substr、substring" class="headerlink" title="4.substr、substring"></a>4.substr、substring</h6><p><strong>注意</strong>：索引从1开始</p><p>截取从指定索引处后面所有字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select substr(&#39;李莫愁爱上了陆展元&#39;,7) out_out;&#x2F;&#x2F;陆展元</span><br></pre></td></tr></table></figure><p>截取从指定索引处指定字符长度的字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select substr(&#39;李莫愁爱上了陆展元&#39;,1,3) out_put&#x2F;&#x2F;李莫愁。从第一个开始，截取三个。</span><br></pre></td></tr></table></figure><p>姓名中首字符大写，其它字符小写然后用_拼接，显示出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select concat(upper(substr(last_name,1,1)),&#39;_&#39;,lower(substr(last_name,2))) out_put</span><br><span class="line">from employees;</span><br></pre></td></tr></table></figure><h6 id="5-instr"><a href="#5-instr" class="headerlink" title="5.instr"></a>5.instr</h6><p>返回子串第一次出现的索引，如果找不到返回0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select instr(&#39;杨不悔爱上了殷六侠&#39;,&#39;殷六侠&#39;) as out_put;</span><br></pre></td></tr></table></figure><h6 id="6-trim"><a href="#6-trim" class="headerlink" title="6.trim"></a>6.trim</h6><p>去掉前后的字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select length(trim(&#39;   张翠山   &#39;)) as out_put;&#x2F;&#x2F;张翠上</span><br><span class="line">select trim(&#39;a&#39; from &#39;aaaa张aaaa翠山aaaa&#39;) as out_put;&#x2F;&#x2F;张aaaa翠山</span><br></pre></td></tr></table></figure><h6 id="7-lpad"><a href="#7-lpad" class="headerlink" title="7.lpad"></a>7.lpad</h6><p>用指定的字符实现左填充指定长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select lpad(&#39;殷素素&#39;,10,&#39;*&#39;) as out_put;&#x2F;&#x2F;*******殷素素</span><br><span class="line">select lpad(&#39;殷素素&#39;,,&#39;*&#39;) as out_put;&#x2F;&#x2F;殷素</span><br></pre></td></tr></table></figure><h6 id="8-rpad用指定的字符实现右填充指定长度"><a href="#8-rpad用指定的字符实现右填充指定长度" class="headerlink" title="8.rpad用指定的字符实现右填充指定长度"></a>8.rpad用指定的字符实现右填充指定长度</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select rpad(&#39;殷素素&#39;,12,&#39;ab&#39;) as out_put;</span><br></pre></td></tr></table></figure><h6 id="9-replace替换"><a href="#9-replace替换" class="headerlink" title="9.replace替换"></a>9.replace替换</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select replace(&#39;张无忌爱上了周芷若&#39;,&#39;周芷若&#39;,&#39;赵敏&#39;) as out_put;</span><br></pre></td></tr></table></figure><h5 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h5><h6 id="1-round四舍五入"><a href="#1-round四舍五入" class="headerlink" title="1.round四舍五入"></a>1.round四舍五入</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select round(-1.55);&#x2F;&#x2F;-2</span><br><span class="line">select round(1.567,2);&#x2F;&#x2F;1.57</span><br></pre></td></tr></table></figure><h6 id="2-ceil向上取整-返回-gt-该参数的最小整数"><a href="#2-ceil向上取整-返回-gt-该参数的最小整数" class="headerlink" title="2.ceil向上取整,返回&gt;=该参数的最小整数"></a>2.ceil向上取整,返回&gt;=该参数的最小整数</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select ceil(1.002);&#x2F;&#x2F;2</span><br></pre></td></tr></table></figure><h6 id="3-floor向下取整，返回-lt-该参数的最大整数"><a href="#3-floor向下取整，返回-lt-该参数的最大整数" class="headerlink" title="3.floor向下取整，返回&lt;=该参数的最大整数"></a>3.floor向下取整，返回&lt;=该参数的最大整数</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select floor(-9.99);&#x2F;&#x2F;-10</span><br></pre></td></tr></table></figure><h6 id="4-truncate-截断-表示小数点后保留几位"><a href="#4-truncate-截断-表示小数点后保留几位" class="headerlink" title="4.truncate  截断,表示小数点后保留几位"></a>4.truncate  截断,表示小数点后保留几位</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select truncate(1.65,1);&#x2F;&#x2F;1.6</span><br></pre></td></tr></table></figure><h6 id="5-mod-取余"><a href="#5-mod-取余" class="headerlink" title="5.mod  取余"></a>5.mod  取余</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select mod(10,3);&#x2F;&#x2F;1</span><br><span class="line">select 10%3;&#x2F;&#x2F;1</span><br></pre></td></tr></table></figure><h5 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h5><h6 id="1-now返回当前系统日期-时间"><a href="#1-now返回当前系统日期-时间" class="headerlink" title="1.now返回当前系统日期+时间"></a>1.now返回当前系统日期+时间</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select now();</span><br></pre></td></tr></table></figure><h6 id="2-curdate-返回当前系统日期，不包含时间"><a href="#2-curdate-返回当前系统日期，不包含时间" class="headerlink" title="2.curdate 返回当前系统日期，不包含时间"></a>2.curdate 返回当前系统日期，不包含时间</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select curdate();</span><br></pre></td></tr></table></figure><h6 id="3-curtime-返回当前时间，不包含日期"><a href="#3-curtime-返回当前时间，不包含日期" class="headerlink" title="3.curtime 返回当前时间，不包含日期"></a>3.curtime 返回当前时间，不包含日期</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select curtime();</span><br></pre></td></tr></table></figure><h6 id="4-可以获取指定的部分，年、月、日、小时、分钟、秒"><a href="#4-可以获取指定的部分，年、月、日、小时、分钟、秒" class="headerlink" title="4.可以获取指定的部分，年、月、日、小时、分钟、秒"></a>4.可以获取指定的部分，年、月、日、小时、分钟、秒</h6><p><strong>需要注意大小写</strong></p><p>now():获取当前日期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select year(now()) 年;</span><br><span class="line">select month(now()) 月；</span><br><span class="line">select monthname(now()) 月;&#x2F;&#x2F;英文</span><br></pre></td></tr></table></figure><h6 id="5-str-to-date"><a href="#5-str-to-date" class="headerlink" title="5.str_to_date()"></a>5.str_to_date()</h6><p>str_to_date():将日期格式的字符转换成指定格式的日期</p><p>​    str_to_date(‘9-13-1999’,’%m-%d-%Y’)            1999-09-13</p><h6 id="6-date-format"><a href="#6-date-format" class="headerlink" title="6.date_format()"></a>6.date_format()</h6><p>date_format():将日期转换成字符</p><p>​    date_format(‘2018/6/6’,’%Y年%M月%D日’)    2018年06月06日</p><h5 id="其它函数【补充】"><a href="#其它函数【补充】" class="headerlink" title="其它函数【补充】"></a>其它函数【补充】</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select version();</span><br><span class="line">select database();</span><br><span class="line">select user();</span><br></pre></td></tr></table></figure><h5 id="流程控制函数【补充】"><a href="#流程控制函数【补充】" class="headerlink" title="流程控制函数【补充】"></a>流程控制函数【补充】</h5><h6 id="if函数-if-else-的效果"><a href="#if函数-if-else-的效果" class="headerlink" title="if函数:if else 的效果"></a>if函数:if else 的效果</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select if(10&gt;5,&#39;大&#39;,&#39;小&#39;);&#x2F;&#x2F;如果第一个表达式为真，返回第二个表达式的值，否则返回第三个表达式的值</span><br></pre></td></tr></table></figure><h6 id="case函数的使用一：switch-case-的效果"><a href="#case函数的使用一：switch-case-的效果" class="headerlink" title="case函数的使用一：switch case 的效果"></a>case函数的使用一：switch case 的效果</h6><p>case 要判断的字段或表达式</p><p>when 常亮1 then 要显示的值1或语句1;</p><p>when 常亮2 then 要显示的值2或语句2;</p><p>··················</p><p>else 要显示的值n或语句n;</p><p>end</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">案例：查询员工的工资，要求</span><br><span class="line">部门号&#x3D;30，显示的工资为1.1倍</span><br><span class="line">部门号&#x3D;40，显示的工资为1.2倍</span><br><span class="line">部门号&#x3D;50，显示的工资为1.3倍</span><br><span class="line">其它部门，显示的工资为原工资</span><br><span class="line"></span><br><span class="line">select salary 原始工资,department_id,</span><br><span class="line">case department_id</span><br><span class="line">when 30 then salary*1.1&#x2F;&#x2F;如果是值不用加分号，如果是语句要加分号</span><br><span class="line">when 40 then salary*1.2</span><br><span class="line">when 50 then salary*1.3</span><br><span class="line">else salary</span><br><span class="line">end as 新工资</span><br><span class="line">from employees;</span><br></pre></td></tr></table></figure><h6 id="case-函数的使用二：类似于-多重if"><a href="#case-函数的使用二：类似于-多重if" class="headerlink" title="case 函数的使用二：类似于 多重if"></a>case 函数的使用二：类似于 多重if</h6><p>case</p><p>when 条件1 then 要显示的值1或语句1;</p><p>when 条件2 then 要显示的值2或语句2;</p><p>·········</p><p>else 要显示的值n或语句2;</p><p>end</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">案例：查询员工的工资的情况</span><br><span class="line">如果工资&gt;20000,显示A级别</span><br><span class="line">如果工资&gt;15000,显示B级别</span><br><span class="line">如果工资&gt;10000,显示C级别</span><br><span class="line">否则，显示D级别</span><br><span class="line"></span><br><span class="line">select salary,</span><br><span class="line">case</span><br><span class="line">when salary&gt;20000 then &#39;A&#39;</span><br><span class="line">when salary&gt;15000 then &#39;B&#39;</span><br><span class="line">when salary&gt;10000 then &#39;C&#39;</span><br><span class="line">else &#39;D&#39;</span><br><span class="line">end as 工资级别</span><br><span class="line">from employees;</span><br></pre></td></tr></table></figure><h4 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a>分组函数</h4><p>功能：用作统计使用，有称为聚合函数或统计函数或组函数</p><p>sum 求和、avg 平均值、max 最大值、min 最小值、count 计算个数</p><p>特点：</p><p>1.sum、avg一般用于处理数值型</p><p>​    max、min、count可以处理任何类型</p><p>2.以上分组函数都忽略null值</p><p>3.可以和distinct搭配实现去重的运算</p><p>4.count函数的单独介绍</p><p>​    一般使用count(*)用作统计行数</p><p>5.和分组函数一同查询的字段要求是group by后的字段</p><h5 id="1-简单的使用"><a href="#1-简单的使用" class="headerlink" title="1.简单的使用"></a>1.简单的使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select sum(salary) from employees;</span><br><span class="line">select avg(salary) from employees;</span><br><span class="line">select min(salary) from employees;</span><br><span class="line">select max(salary) from employees;</span><br><span class="line">select count(salary) from employees;</span><br><span class="line"></span><br><span class="line">select sum(salary) 和,round(avg(salary),2) 平均, max(salary) 最高, min(salary) 最低,count(salary) 个数</span><br><span class="line">from employees;</span><br></pre></td></tr></table></figure><h5 id="2-和distinct搭配"><a href="#2-和distinct搭配" class="headerlink" title="2.和distinct搭配"></a>2.和distinct搭配</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select sum(distinct salary),sum(salary) from employees;</span><br><span class="line">select count(distinct salary), count(salary) from employees;</span><br></pre></td></tr></table></figure><h5 id="3-count函数的详细介绍"><a href="#3-count函数的详细介绍" class="headerlink" title="3.count函数的详细介绍"></a>3.count函数的详细介绍</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select count(salary) from employees;</span><br><span class="line">select count(*) from employees;</span><br><span class="line">select count(1) from employees;</span><br><span class="line">select count(2) from employees;</span><br></pre></td></tr></table></figure><p>效率：</p><p>MYISAM存储引擎下，count(*)的效率高</p><p>INNODB存储引擎下，count(*)和count(1)的效率差不多，比count(字段)要高</p><h5 id="4-和分组函数一起查询的字段有限制"><a href="#4-和分组函数一起查询的字段有限制" class="headerlink" title="4.和分组函数一起查询的字段有限制"></a>4.和分组函数一起查询的字段有限制</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select avg(salary),employee_id from employees;&#x2F;&#x2F;这里employee_id没有意义</span><br></pre></td></tr></table></figure><h3 id="分组查询-group-by"><a href="#分组查询-group-by" class="headerlink" title="分组查询 group by"></a>分组查询 group by</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">select 分组函数，列（要求出现在group by的后面）</span><br><span class="line">from 表</span><br><span class="line"> 【where 筛选条件】</span><br><span class="line">group by 分组的列表</span><br><span class="line"> 【order by 子句】</span><br><span class="line">注意：</span><br><span class="line">查询列表比较特殊，要求是分组函数和group by后出现的字段</span><br><span class="line">特点：</span><br><span class="line">1.分组查询中的筛选条件分为两类</span><br><span class="line">数据源位置关键字</span><br><span class="line">分组前筛选原始表  group by子句的前面  where</span><br><span class="line">分组后筛选分组后的数据源  group by子句的后面having</span><br><span class="line"></span><br><span class="line">分组函数做条件肯定放在having子句中</span><br><span class="line">能用分组前筛选的，就优先考虑使用分组前筛选</span><br><span class="line">2.group by 子句支持单个字段分组，多个字段分组（多个字段之间用逗号隔开没有顺序要求），表达式或函数（用得较少）</span><br><span class="line">3.也可以添加排序（排序放在整个分组查询之后）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">案例1：查询每个工种的最高工资</span><br><span class="line">select max(salary),job_id</span><br><span class="line">from employees</span><br><span class="line">group by job_id;</span><br></pre></td></tr></table></figure><h4 id="分组前的筛选where"><a href="#分组前的筛选where" class="headerlink" title="分组前的筛选where"></a>分组前的筛选where</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">案例1：查询邮箱中包含a字符的，每个部门的平均工资</span><br><span class="line">select avg(salary),department_id</span><br><span class="line">from employees</span><br><span class="line">where email like &#39;%a%&#39;</span><br><span class="line">group by department_id;</span><br><span class="line"></span><br><span class="line">案例2：查询有奖金的每个领导手下员工的最高工资</span><br><span class="line">select max(salary),manager_id</span><br><span class="line">from employees</span><br><span class="line">where commission_pct is not null</span><br><span class="line">group by manager_id;</span><br></pre></td></tr></table></figure><h4 id="分组后的筛选having"><a href="#分组后的筛选having" class="headerlink" title="分组后的筛选having"></a>分组后的筛选having</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">案例1：查询哪个部门的员工个数&gt;2</span><br><span class="line"></span><br><span class="line">1.查询每个部门的员工个数</span><br><span class="line">select count(*),department_id</span><br><span class="line">from employees</span><br><span class="line">group by department_id</span><br><span class="line"></span><br><span class="line">2.根据1的结果进行筛选，查询哪个部门的员工个数&gt;2</span><br><span class="line">select count(*),department_id</span><br><span class="line">from employees</span><br><span class="line">group by department_id</span><br><span class="line">having count(*)&gt;2;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">案例2：查询每个工种有奖金的员工的最高工资&gt;12000的工种编号和最高工资</span><br><span class="line"></span><br><span class="line">1.查询每个工种有奖金的员工的最高工资</span><br><span class="line">SELECT job_id,MAX(salary)</span><br><span class="line">FROM employees</span><br><span class="line">WHERE commission_pct IS NOT NULL</span><br><span class="line">GROUP BY job_id;</span><br><span class="line"></span><br><span class="line">2.根据1结果继续筛选，最高工资&gt;12000</span><br><span class="line">SELECT job_id,MAX(salary)</span><br><span class="line">FROM employees</span><br><span class="line">WHERE commission_pct IS NOT NULL</span><br><span class="line">GROUP BY job_id;</span><br><span class="line">HAVING MAX(salary)&gt;12000;</span><br></pre></td></tr></table></figure><h5 id="按表达式或函数分组"><a href="#按表达式或函数分组" class="headerlink" title="按表达式或函数分组"></a>按表达式或函数分组</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">案例：按员工姓名的长度分组，查询每一组的员工个数，筛选员工个数&gt;5的有哪些</span><br><span class="line">select count(*), length(last_name) len_name</span><br><span class="line">from employees</span><br><span class="line">group by length(last_name)</span><br><span class="line">having count(*)&gt;5;</span><br></pre></td></tr></table></figure><h5 id="按多个字段进行分组"><a href="#按多个字段进行分组" class="headerlink" title="按多个字段进行分组"></a>按多个字段进行分组</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">案例：查询每个部门每个工种的员工的平均工资</span><br><span class="line">select avg(salary),department_id,job_id</span><br><span class="line">from employees</span><br><span class="line">group by department_id,job_id;&#x2F;&#x2F;顺序可以颠倒</span><br></pre></td></tr></table></figure><h5 id="添加排序"><a href="#添加排序" class="headerlink" title="添加排序"></a>添加排序</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">案例：查询每个部门每个工种的员工的平均工资，并且按平均工资的高低显示</span><br><span class="line">select avg(salary),department_id,job_id</span><br><span class="line">from employees</span><br><span class="line">group by job_id,department_id</span><br><span class="line">order by avg(salary) desc;</span><br></pre></td></tr></table></figure><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><p>含义：又称多表查询，当查询的字段来自于多个表时，就会用到连接查询</p><p>笛卡尔乘积现象：表1 有m行，表2有n行，结果=m*n行</p><p>发生原因：没有有效的连接条件</p><p>如何避免：添加有效的连接条件</p><p>分类：</p><p>​            按年代分类：</p><p>​                    sql92标准：仅仅支持内连接</p><p>​                    sql99标准【推荐】：支持内连接+外连接（左外和右外）+交叉连接</p><p>​            按功能分类：</p><p>​                    内连接：</p><p>​                                等值连接</p><p>​                                非等值连接</p><p>​                                自连接</p><p>​                    外连接：</p><p>​                                左外连接</p><p>​                                右外连接</p><p>​                                全外连接</p><p>​                    交叉连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select name,boyname from boys,beauty</span><br><span class="line">where beauty.boyfriend_id&#x3D;boys.id;</span><br></pre></td></tr></table></figure><h4 id="sql92标准"><a href="#sql92标准" class="headerlink" title="sql92标准"></a>sql92标准</h4><h5 id="1-等值连接"><a href="#1-等值连接" class="headerlink" title="1.等值连接"></a>1.等值连接</h5><p>（1）多表等值连接的结果为多表的交集部分</p><p>（2）n表连接，至少需要n-1个连接条件</p><p>（3）多表的顺序没有要求</p><p>（4）一般需要为表起别名</p><p>（5）可以搭配前面介绍的所有子句使用，比如排序、分组、筛选</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">案例1：查询女神名和对应的男神名</span><br><span class="line">select name,boyname from boys,beauty</span><br><span class="line">where beauty.boyfriend_id&#x3D;boys.id;</span><br></pre></td></tr></table></figure><h6 id="1-为表起别名"><a href="#1-为表起别名" class="headerlink" title="1.为表起别名"></a>1.为表起别名</h6><p>提高语句的简洁度</p><p>区分多个重名的字段</p><p>注意：如果为表起了别名，则查询的字段就不能使用原来的表名去限定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查询员工名、工种号、工种名</span><br><span class="line">select last_name,employees.job_id,job_title</span><br><span class="line">from employees,jobs</span><br><span class="line">where employees.&#96;job_id&#96;&#x3D;jobs.&#96;job_id&#96;;</span><br><span class="line"></span><br><span class="line">select last_name,e.job_id,job_title</span><br><span class="line">from employees e,jobs j</span><br><span class="line">where e.&#96;job_id&#96;&#x3D;j.&#96;job_id&#96;;</span><br></pre></td></tr></table></figure><h6 id="2-两个表的顺序可以调换"><a href="#2-两个表的顺序可以调换" class="headerlink" title="2.两个表的顺序可以调换"></a>2.两个表的顺序可以调换</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查询员工名、工种号、工种名</span><br><span class="line">select last_name,e.job_id,job_title</span><br><span class="line">from jobs j,employees e</span><br><span class="line">where e.&#96;job_id&#96;&#x3D;j.&#96;job_id&#96;;</span><br></pre></td></tr></table></figure><h6 id="3-可以加筛选"><a href="#3-可以加筛选" class="headerlink" title="3.可以加筛选"></a>3.可以加筛选</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查询有奖金的员工名、部门名</span><br><span class="line">select last_name,department_name</span><br><span class="line">from employees e,departments d</span><br><span class="line">where e.&#96;department_id&#96;&#x3D;d.&#96;department_id&#96;</span><br><span class="line">and e.&#96;commission_pct&#96; is not null;</span><br></pre></td></tr></table></figure><h6 id="4-可以加分组"><a href="#4-可以加分组" class="headerlink" title="4.可以加分组"></a>4.可以加分组</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查询每个城市的部门个数</span><br><span class="line">SELECT COUNT(*) 个数,city</span><br><span class="line">FROM departments d,locations l</span><br><span class="line">WHERE d.&#96;location_id&#96;&#x3D;l.&#96;location_id&#96;</span><br><span class="line">GROUP BY city;</span><br></pre></td></tr></table></figure><h6 id="5-可以加排序"><a href="#5-可以加排序" class="headerlink" title="5.可以加排序"></a>5.可以加排序</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查询每个工种的工种名和员工的个数，并且按员工个数降序</span><br><span class="line">select job_title,count(*)</span><br><span class="line">from employees e,jobs j</span><br><span class="line">where e.&#96;job_id&#96;&#x3D;j.&#96;job_id&#96;</span><br><span class="line">group by job_title</span><br><span class="line">order by count(*) desc;</span><br></pre></td></tr></table></figure><h6 id="6-可以实现三表连接"><a href="#6-可以实现三表连接" class="headerlink" title="6.可以实现三表连接"></a>6.可以实现三表连接</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查询员工名、部门名和所在的城市</span><br><span class="line">select last_name,department_name,city</span><br><span class="line">from employees e,departments d,locations l</span><br><span class="line">where e.&#96;department_id&#96;&#x3D;d.&#96;department_id&#96;</span><br><span class="line">and d.&#96;location_id&#96;&#x3D;l.&#96;location_id&#96;;</span><br></pre></td></tr></table></figure><h5 id="2-非等值连接"><a href="#2-非等值连接" class="headerlink" title="2.非等值连接"></a>2.非等值连接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查询员工的工资和工资级别</span><br><span class="line">SELECT salary,grade_level</span><br><span class="line">FROM employees e,job_grades g</span><br><span class="line">WHERE salary BETWEEN g.&#96;lowest_sal&#96; AND g.&#96;highest_sal&#96;;</span><br></pre></td></tr></table></figure><h5 id="3-自连接"><a href="#3-自连接" class="headerlink" title="3.自连接"></a>3.自连接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查询员工名和上级的名称</span><br><span class="line">SELECT e.employee_id,e.last_name,m.employee_id,m.last_name</span><br><span class="line">FROM employees e,employees m</span><br><span class="line">WHERE e.&#96;manager_id&#96;&#x3D;m.&#96;employee_id&#96;;</span><br></pre></td></tr></table></figure><h4 id="sql99语法"><a href="#sql99语法" class="headerlink" title="sql99语法"></a>sql99语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">select 查询列表</span><br><span class="line">from 表1 别名 【连接类型】</span><br><span class="line">join 表2 别名</span><br><span class="line">on 连接条件</span><br><span class="line">【where 筛选条件】</span><br><span class="line">【group by 分组】</span><br><span class="line">【having 筛选条件】</span><br><span class="line">【order by 排序列表】</span><br><span class="line">分类：</span><br><span class="line">内连接：inner</span><br><span class="line">外连接</span><br><span class="line">左外：left【outer】</span><br><span class="line">右外：right【outer】</span><br><span class="line">全外：full【outer】</span><br><span class="line">交叉连接：cross</span><br></pre></td></tr></table></figure><h5 id="一、内连接"><a href="#一、内连接" class="headerlink" title="一、内连接"></a>一、内连接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">select 查询列表</span><br><span class="line">from 表1 别名 </span><br><span class="line">inner join 表2 别名</span><br><span class="line">on 连接条件;</span><br><span class="line"></span><br><span class="line">分类：</span><br><span class="line">等值</span><br><span class="line">非等值</span><br><span class="line">自连接</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">1.添加排序、分组、筛选</span><br><span class="line">2.inner可以省略</span><br><span class="line">3.筛选条件放在where后面，连接条件放在on后面，提高分离性，便于阅读</span><br><span class="line">4.inner join连接和sql92语法中的连接效果是一样的，都是查询多表的交集</span><br></pre></td></tr></table></figure><h6 id="1-等值连接-1"><a href="#1-等值连接-1" class="headerlink" title="1.等值连接"></a>1.等值连接</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">案例1：查询员工名、部门名</span><br><span class="line">SELECT last_name,department_name</span><br><span class="line">FROM employees e</span><br><span class="line">INNER JOIN departments d</span><br><span class="line">ON e.&#96;department_id&#96;&#x3D;d.&#96;department_id&#96;;</span><br><span class="line"></span><br><span class="line">案例2：查询名字中包含e的员工名和工种名（添加筛选）</span><br><span class="line">SELECT last_name, job_title</span><br><span class="line">FROM employees e</span><br><span class="line">INNER JOIN jobs j</span><br><span class="line">ON e.&#96;job_id&#96;&#x3D;j.&#96;job_id&#96;</span><br><span class="line">WHERE e.&#96;last_name&#96; LIKE &#39;%e%&#39;;</span><br><span class="line"></span><br><span class="line">案例3：查询部门个数&gt;3的城市名和部门个数，（添加分组+筛选）</span><br><span class="line">select city,count(*) 部门个数</span><br><span class="line">from department d</span><br><span class="line">inner join locations l</span><br><span class="line">on d.&#96;location_id&#96;&#x3D;l.&#96;location_id&#96;</span><br><span class="line">group by city</span><br><span class="line">having count(*)&gt;3;</span><br><span class="line"></span><br><span class="line">案例4：查询哪个部门的员工个数&gt;3的部门名和员工个数，并按个数降序（添加排序）</span><br><span class="line">SELECT COUNT(*),department_name</span><br><span class="line">FROM employees e</span><br><span class="line">INNER JOIN departments d</span><br><span class="line">ON e.&#96;department_id&#96;&#x3D;d.&#96;department_id&#96;</span><br><span class="line">GROUP BY department_name</span><br><span class="line">HAVING COUNT(*)&gt;3</span><br><span class="line">ORDER BY COUNT(*) DESC;</span><br><span class="line"></span><br><span class="line">案例5：查询员工名、部门名、工种名、并按部门名降序（三表连接）</span><br><span class="line">SELECT last_name,department_name,job_title</span><br><span class="line">FROM employees e</span><br><span class="line">INNER JOIN departments d ON e.&#96;department_id&#96;&#x3D;d.&#96;department_id&#96;</span><br><span class="line">INNER JOIN jobs j ON e.&#96;job_id&#96;&#x3D;j.&#96;job_id&#96;</span><br><span class="line">ORDER BY department_name DESC;</span><br></pre></td></tr></table></figure><h6 id="2-非等值连接-1"><a href="#2-非等值连接-1" class="headerlink" title="2.非等值连接"></a>2.非等值连接</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查询员工的工资级别</span><br><span class="line">select salary,grade_level</span><br><span class="line">from employees e</span><br><span class="line">join job_grades g</span><br><span class="line">on e.&#96;salary&#96; between g.&#96;lowest_sal&#96; and g.&#96;highest_sal&#96;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="3-自连接-1"><a href="#3-自连接-1" class="headerlink" title="3.自连接"></a>3.自连接</h6><p>查询姓名中包含字符k的员工的名字、上级的名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select e.last_name,m.last_name</span><br><span class="line">from employees e</span><br><span class="line">join employees m</span><br><span class="line">on e.&#96;manager_id&#96;&#x3D;m.&#96;employee_id&#96;;</span><br><span class="line">where e.&#96;last_name&#96; like &#39;%k%&#39;;</span><br></pre></td></tr></table></figure><h5 id="二、外连接"><a href="#二、外连接" class="headerlink" title="二、外连接"></a>二、外连接</h5><p>所以在左边的为主表</p><p>应用场景：用于查询一个表中有，另一个表中没有的记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">案例1：查询哪个部门没有员工</span><br><span class="line">左外：</span><br><span class="line">select d.*,e.employee_id</span><br><span class="line">from departments d</span><br><span class="line">left outer join employees e</span><br><span class="line">on d.&#96;department_id&#96;&#x3D;e.&#96;department_id&#96;</span><br><span class="line">where e.&#96;employee_id&#96; is null;</span><br></pre></td></tr></table></figure><p>特点：</p><p>​    1.外连接的查询结果为主表中的所有记录</p><p>​        如果从表中没有和它匹配的，则显示匹配的值</p><p>​        如果从表中没有和它匹配的，则显示null</p><p>​        外连接查询结果=内连接结果+主表中有而从表中没有的记录</p><p>​    2.左外连接中，left左边的是主表</p><p>​        右外连接中，right join右边的是主表</p><p>​    3.左外和右外交换连个表的顺序，可以实现同样的效果</p><p>​    4.全外连接=内连接的结果+表1中有但表2中没有的+表2中有但表1中没有的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">引入：查询男朋友不在男神表的女神名</span><br><span class="line">select * from beauty;</span><br><span class="line">select * from boys;</span><br><span class="line"></span><br><span class="line">select b.name,bo.*</span><br><span class="line">from beauty b</span><br><span class="line">left outer join boys bo</span><br><span class="line">on b.&#96;boyfriend_id&#96;&#x3D;bo.&#96;id&#96;</span><br><span class="line">where bo.&#96;id&#96; is null;</span><br></pre></td></tr></table></figure><h6 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">查询男朋友不在男神表的女神名</span><br><span class="line">select b.name,bo.*</span><br><span class="line">from beauty b</span><br><span class="line">left outer join boys bo</span><br><span class="line">on b.&#96;boyfriend_id&#96;&#x3D;bo.&#96;id&#96;</span><br><span class="line">where bo.&#96;id&#96; is null;</span><br><span class="line"></span><br><span class="line">查询哪个部门没有员工</span><br><span class="line">select d.*,e.employee_id</span><br><span class="line">from departments d</span><br><span class="line">left outer join employees e</span><br><span class="line">on d.&#96;department_id&#96;&#x3D;e.&#96;department_id&#96;</span><br><span class="line">where e.&#96;employee_id&#96; is null;</span><br></pre></td></tr></table></figure><h6 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">查询男朋友不在男神表的女神名</span><br><span class="line">select b.name,bo.*</span><br><span class="line">from boys bo</span><br><span class="line">right outer join beauty b</span><br><span class="line">on b.&#96;boyfriend_id&#96;&#x3D;bo.&#96;id&#96;</span><br><span class="line">where bo.&#96;id&#96; is null;</span><br><span class="line"></span><br><span class="line">查询哪个部门没有员工</span><br><span class="line">select d.*,e.employee_id</span><br><span class="line">from employees e</span><br><span class="line">right outer join departments d</span><br><span class="line">on d.&#96;department_id&#96;&#x3D;e.&#96;department_id&#96;</span><br><span class="line">where e.&#96;employee_id&#96; is null;</span><br></pre></td></tr></table></figure><h6 id="全外"><a href="#全外" class="headerlink" title="全外"></a>全外</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use girls;</span><br><span class="line">select b.*,bo.*</span><br><span class="line">from beauty b</span><br><span class="line">full outer join boys bo</span><br><span class="line">on b.&#96;boyfriend_id&#96;&#x3D;bo.id;</span><br></pre></td></tr></table></figure><h5 id="三、交叉连接"><a href="#三、交叉连接" class="headerlink" title="三、交叉连接"></a>三、交叉连接</h5><p>笛卡尔乘积</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select b.*,bo.*</span><br><span class="line">from beauty b</span><br><span class="line">cross join boys bo;</span><br></pre></td></tr></table></figure><h4 id="sql92和sql99pk"><a href="#sql92和sql99pk" class="headerlink" title="sql92和sql99pk"></a>sql92和sql99pk</h4><p>功能：sql99支持的较多</p><p>可读性：sql99实现连接条件和筛选条件的分离，可读性较高</p><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p>含义：出现在其他语句中的select语句，称为子查询或内查询</p><p>外部的查询语句，称为主查询或外查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">分类：</span><br><span class="line">按子查询出现的位置：</span><br><span class="line">select后面：</span><br><span class="line">仅仅支持标量子查询</span><br><span class="line">from后面：</span><br><span class="line">支持表子查询</span><br><span class="line">where或having后面：**</span><br><span class="line">标量子查询（单行）**</span><br><span class="line">列子查询（多行）**</span><br><span class="line">行子查询</span><br><span class="line">exists后面（相关子查询）：</span><br><span class="line">表子查询</span><br><span class="line">按结果集的行列数不同：</span><br><span class="line">标量子查询（结果集只有一行一列）</span><br><span class="line">列子查询（结果集只有一列多行）</span><br><span class="line">行子查询（结果集有一行多列）</span><br><span class="line">表子查询（结果集一般为多行多列）（随意）</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select first_name from employees where</span><br><span class="line">department_id in(</span><br><span class="line">select department_id from departments</span><br><span class="line">where +location_id&#x3D;1700</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="where或having后面"><a href="#where或having后面" class="headerlink" title="where或having后面"></a>where或having后面</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">特点：</span><br><span class="line">1.子查询放在小括号内</span><br><span class="line">2.子查询一般放在条件的右侧</span><br><span class="line">3.标量子查询，一般搭配着单行操作符使用</span><br><span class="line">&gt; &lt; &gt;&#x3D; &lt;&#x3D; &#x3D; &lt;&gt;</span><br><span class="line">列子查询，一般搭配着多行操作符使用</span><br><span class="line">in any&#x2F;some all</span><br><span class="line">4.子查询的执行优先于主查询执行，主查询的条件用到了子查询的结果</span><br></pre></td></tr></table></figure><h5 id="1-标量子查询（单行子查询）"><a href="#1-标量子查询（单行子查询）" class="headerlink" title="1.标量子查询（单行子查询）"></a>1.标量子查询（单行子查询）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">案例1：谁的工资比Abel高？</span><br><span class="line">第一步：查询Abel的工资</span><br><span class="line">select salary</span><br><span class="line">from employees</span><br><span class="line">where last_name&#x3D;&#39;Abel&#39;;</span><br><span class="line">第二步：查询员工的信息，满足salary&gt;第一步结果</span><br><span class="line">select *</span><br><span class="line">from employees</span><br><span class="line">where salary&gt;(</span><br><span class="line">select salary</span><br><span class="line">from employees</span><br><span class="line">where last_name&#x3D;&#39;Abel&#39;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">案例2：返回job_id与141号员工相同，salary比143号员工多的员工姓名，job_id和工资</span><br><span class="line">第一步：查询141号员工的job_id</span><br><span class="line"></span><br><span class="line">select job_id</span><br><span class="line">form employees</span><br><span class="line">where employee_id&#x3D;141</span><br><span class="line"></span><br><span class="line">第二步：查询143号员工的salary</span><br><span class="line"></span><br><span class="line">select salary</span><br><span class="line">from employees</span><br><span class="line">where employee_id&#x3D;143</span><br><span class="line"></span><br><span class="line">第三步：查询员工的姓名，job_id和工资，要求job_id等于第一步并且salary大于第二步</span><br><span class="line"></span><br><span class="line">select last_name,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where job_id&#x3D;(</span><br><span class="line">select job_id</span><br><span class="line">form employees</span><br><span class="line">where employee_id&#x3D;141</span><br><span class="line">) and salary&gt;(</span><br><span class="line">select salary</span><br><span class="line">from employees</span><br><span class="line">where employee_id&#x3D;143</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">案例3：返回公司工资最少的员工的last_name,job_id和salary</span><br><span class="line">第一步：查询公司的最低工资</span><br><span class="line">select MIN(salary)</span><br><span class="line">from employees</span><br><span class="line"></span><br><span class="line">第二步：查询last_name,job_id和salary,要求salary&#x3D;第一步</span><br><span class="line">select last_name,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary&#x3D;(</span><br><span class="line">select MIN(salary)</span><br><span class="line">from employees</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">案例4：查询最低工资大于50号部门最低工资的部门id和其最低工资</span><br><span class="line">第一步：查询50号部门的最低工资</span><br><span class="line">select MIN(salary)</span><br><span class="line">from employees</span><br><span class="line">where department_id&#x3D;50</span><br><span class="line"></span><br><span class="line">第二步：查询每个部门的最低工资</span><br><span class="line">select MIN(salary),department_id</span><br><span class="line">from employees</span><br><span class="line">group by department_id</span><br><span class="line"></span><br><span class="line">第三步：筛选第二步，满足min(salary)大于第一步</span><br><span class="line">select MIN(salary),department_id</span><br><span class="line">from employees</span><br><span class="line">group by department_id</span><br><span class="line">having MIN(salary)&gt;(</span><br><span class="line">        select MIN(salary)</span><br><span class="line">        from employees</span><br><span class="line">        where department_id&#x3D;50</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="2-列子查询（多行子查询）"><a href="#2-列子查询（多行子查询）" class="headerlink" title="2.列子查询（多行子查询）"></a>2.列子查询（多行子查询）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">操作符含义</span><br><span class="line">in&#x2F;not in等于列表中的任意一个&#x2F;&#x2F;可以用等于any代替</span><br><span class="line">any&#x2F;some和子查询返回的某一个值比较&#x2F;&#x2F;可以用大于MIN()来代替</span><br><span class="line">all和子查询返回的所有值比较</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">案例1：返回location_id是1400或1700的部门中的所有员工姓名</span><br><span class="line">第一步：查询location_id是1400或1700的部门编号</span><br><span class="line">select department_id</span><br><span class="line">from departments</span><br><span class="line">where location_id in(1400,1700)</span><br><span class="line"></span><br><span class="line">第二步：查询员工姓名，要求部门号是第一步列表中的某一个</span><br><span class="line">select last_name</span><br><span class="line">from employees</span><br><span class="line">where department_id in(</span><br><span class="line">        select department_id</span><br><span class="line">        from departments</span><br><span class="line">        where location_id in(1400,1700)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">案例2：返回其它工种中比job_id为&#96;IT_PROG&#96;部门任一工资低的员工的员工号、姓名、job_id以及salary</span><br><span class="line">第一步:查询job_id为&#96;IT_PROG&#96;任一工资</span><br><span class="line">select distinct salary</span><br><span class="line">from employees</span><br><span class="line">where job_id&#x3D;&#96;IT_PROG&#96;</span><br><span class="line"></span><br><span class="line">第二步：查询员工号、姓名、job_id以及salary,salary&lt;(第一步)的任意一个</span><br><span class="line">select last_name,employee_id,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary&lt;any(</span><br><span class="line">        select distinct salary</span><br><span class="line">        from employees</span><br><span class="line">        where job_id&#x3D;&#96;IT_PROG&#96;</span><br><span class="line">)and job_id&lt;&gt;&#96;IT_PROG&#96;;</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">select last_name,employee_id,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary&lt;(</span><br><span class="line">        select max(salary)</span><br><span class="line">        from employees</span><br><span class="line">        where job_id&#x3D;&#96;IT_PROG&#96;</span><br><span class="line">)and job_id&lt;&gt;&#96;IT_PROG&#96;;</span><br><span class="line"></span><br><span class="line">案例3：返回其它部门中比job_id为&#96;IT_PROG&#96;部门所有工资都低的员工的员工号、姓名、job_id以及salary</span><br><span class="line">select last_name,employee_id,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary&lt;all(</span><br><span class="line">        select distinct salary</span><br><span class="line">        from employees</span><br><span class="line">        where job_id&#x3D;&#96;IT_PROG&#96;</span><br><span class="line">)and job_id&lt;&gt;&#96;IT_PROG&#96;;</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">select last_name,employee_id,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary&lt;(</span><br><span class="line">        select min(salary)</span><br><span class="line">        from employees</span><br><span class="line">        where job_id&#x3D;&#96;IT_PROG&#96;</span><br><span class="line">)and job_id&lt;&gt;&#96;IT_PROG&#96;;</span><br></pre></td></tr></table></figure><h5 id="3-行子查询（结果集一行多列或多行多列）"><a href="#3-行子查询（结果集一行多列或多行多列）" class="headerlink" title="3.行子查询（结果集一行多列或多行多列）"></a>3.行子查询（结果集一行多列或多行多列）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">案例：查询员工编号最小并且工资最高的员工信息</span><br><span class="line"></span><br><span class="line">select *</span><br><span class="line">from employees</span><br><span class="line">where (employee_id,salary)&#x3D;(</span><br><span class="line">        select MIN(employee_id),MAX(salary)</span><br><span class="line">        from employees</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">第一步：查询最小的员工编号</span><br><span class="line">select MIN(employee_id)</span><br><span class="line">from employees</span><br><span class="line"></span><br><span class="line">第二步：查询最高工资</span><br><span class="line">select MAN(salary)</span><br><span class="line">from employees</span><br><span class="line"></span><br><span class="line">第三步：查询员工信息</span><br><span class="line">select *</span><br><span class="line">from employees</span><br><span class="line">where employee_id&#x3D;(</span><br><span class="line">        select MIN(employee_id)</span><br><span class="line">        from employees</span><br><span class="line">)and salary&#x3D;(</span><br><span class="line">        select MAX(salary)</span><br><span class="line">        from employees</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="select后面"><a href="#select后面" class="headerlink" title="select后面"></a>select后面</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">案例1：查询每个部门的员工个数</span><br><span class="line">SELECT d.*,(</span><br><span class="line">SELECT COUNT(*)</span><br><span class="line">FROM employees e</span><br><span class="line">WHERE e.&#96;department_id&#96;&#x3D;d.&#96;department_id&#96;</span><br><span class="line">)个数</span><br><span class="line">FROM departments d;</span><br><span class="line"></span><br><span class="line">案例2：查询员工号&#x3D;102的部门名</span><br><span class="line">select(</span><br><span class="line">select department_name</span><br><span class="line">from departments d</span><br><span class="line">inner join employees e</span><br><span class="line">on d.department_id&#x3D;e.department_id</span><br><span class="line">where e.employee_id&#x3D;102</span><br><span class="line">)部门名;</span><br></pre></td></tr></table></figure><h4 id="from后面"><a href="#from后面" class="headerlink" title="from后面"></a>from后面</h4><p>将子查询结果充当一张表，要求必须起别名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">案例：查询每个部门的平均工资的工资等级</span><br><span class="line">查询每个部门的平均工资</span><br><span class="line">select avg(salary),department_id</span><br><span class="line">from employees</span><br><span class="line">group by department_id</span><br><span class="line"></span><br><span class="line">select * from job_grades;</span><br><span class="line"></span><br><span class="line">连接第一步的结果集和job_grades表，筛选条件平均工资between lowest_sal and highest_sal</span><br><span class="line">select ag_dep.*,g.&#96;grade_level&#96;</span><br><span class="line">from (</span><br><span class="line">    select avg(salary),department_id</span><br><span class="line">    from employees</span><br><span class="line">    group by department_id</span><br><span class="line">) ag_dep</span><br><span class="line">inner join job_grades g</span><br><span class="line">on ag_dep.ag between lowest_sal and highest_sal</span><br></pre></td></tr></table></figure><h4 id="exists后面（相关子查询）"><a href="#exists后面（相关子查询）" class="headerlink" title="exists后面（相关子查询）"></a>exists后面（相关子查询）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">exists(完整的查询语句)</span><br><span class="line">结果：</span><br><span class="line">1或0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">select exists(select employee_id from employees);</span><br><span class="line">案例1：查询有员工的部门名</span><br><span class="line">select department_name</span><br><span class="line">from departments d</span><br><span class="line">where exists(</span><br><span class="line">select *</span><br><span class="line">from employees e</span><br><span class="line">where d.&#96;department_id&#96;&#x3D;e.&#96;department_id&#96;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">也可以用in来实现</span><br><span class="line">select department_name</span><br><span class="line">from departments d</span><br><span class="line">where d.&#96;department_id&#96; in(</span><br><span class="line">select department_id</span><br><span class="line">from employees</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">案例2：查询没有女朋友的男神信息</span><br><span class="line">用in：</span><br><span class="line"></span><br><span class="line">select bo.*</span><br><span class="line">from boys bo</span><br><span class="line">where bo.id not in(</span><br><span class="line">select boyfriend_id</span><br><span class="line">from beauty</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">用exists：</span><br><span class="line">select bo.*</span><br><span class="line">from boys bo</span><br><span class="line">where not exists(</span><br><span class="line">select boyfriend_id</span><br><span class="line">from beauty b</span><br><span class="line">where bo.&#96;id&#96;&#x3D;b.&#96;boyfriend_id&#96;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">应用场景：当要显示的数据，一页显示不全，，需要分页提交sql请求</span><br><span class="line">语法：</span><br><span class="line">select 查询列表七</span><br><span class="line">from 表一</span><br><span class="line">【</span><br><span class="line">join type join 表2二</span><br><span class="line">on 连接条件三</span><br><span class="line">where 筛选条件四</span><br><span class="line">group by 分组字段五</span><br><span class="line">having 分组后的筛选六</span><br><span class="line">order by 排序的字段八</span><br><span class="line">】</span><br><span class="line">limit 【offset,】size;九</span><br><span class="line"></span><br><span class="line">offset要显示条目的起始索引（起始索引从0开始）</span><br><span class="line">size 要显示的条目个数</span><br><span class="line">特点：</span><br><span class="line">1.limit语句放在查询语句的最后</span><br><span class="line">2.公式</span><br><span class="line">要显示的页数page，每页的条目数size</span><br><span class="line"></span><br><span class="line">select 查询列表</span><br><span class="line">from 表</span><br><span class="line">limit (page-1)*size,size;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">案例1：查询前5条员工信息</span><br><span class="line">select * from employees limit 0,5;</span><br><span class="line">select * from employees limit 5;</span><br><span class="line"></span><br><span class="line">案例2：查询第11条到第25条</span><br><span class="line">select * from employees limit 10,15;</span><br><span class="line"></span><br><span class="line">案例3：有奖金的员工信息，并且工资较高的前10名显示出来</span><br><span class="line">SELECT </span><br><span class="line">  * </span><br><span class="line">FROM</span><br><span class="line">  employees </span><br><span class="line">WHERE commission_pct IS NOT NULL</span><br><span class="line">ORDER BY salary DESC</span><br><span class="line">LIMIT 10;</span><br></pre></td></tr></table></figure><h3 id="联合查询-union"><a href="#联合查询-union" class="headerlink" title="联合查询 union"></a>联合查询 union</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">union 联合 合并：将多条查询语句的结果合并成一个结果</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line">查询语句1</span><br><span class="line">union </span><br><span class="line">查询语句2</span><br><span class="line">union</span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">应用场景:</span><br><span class="line">要查询的结果来自于多个表，且多个表没有直接的连接关系，但查询的信息一致时</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">1.要求多条查询语句的查询列数是一致的</span><br><span class="line">2.要求多条查询语句的查询的每一列的类型和顺序最好一致</span><br><span class="line">3.使用union关键字默认去重，如果使用union all可以包含重复项</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">查询部门编号&gt;90或邮箱包含a的员工信息</span><br><span class="line">select * from employees where email like &#39;%a%&#39; or department_id&gt;90;</span><br><span class="line"></span><br><span class="line">select * from employees where email like &#39;%a%&#39;</span><br><span class="line">union</span><br><span class="line">select * from employees where department_id&gt;90;</span><br><span class="line"></span><br><span class="line">案例：查询中国用户中男性的信息以及外国用户中男性的用户信息</span><br><span class="line">select id,cname,csex from t_ca where csex&#x3D;&#39;男&#39;</span><br><span class="line">union </span><br><span class="line">select t_id,tName,tGender from t_ua where tGender&#x3D;&#39;male&#39;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3初始MySQL</title>
      <link href="2021/05/12/3%E5%88%9D%E5%A7%8BMySQL/"/>
      <url>2021/05/12/3%E5%88%9D%E5%A7%8BMySQL/</url>
      
        <content type="html"><![CDATA[<h2 id="初始MySQL"><a href="#初始MySQL" class="headerlink" title="初始MySQL"></a>初始MySQL</h2><h3 id="MySQL服务的启动和停止"><a href="#MySQL服务的启动和停止" class="headerlink" title="MySQL服务的启动和停止"></a>MySQL服务的启动和停止</h3><p>​    方式一：计算机——右击管理——服务</p><p>​    方式二：通过管理员身份运行</p><p>​    net start 服务名（启动服务）</p><p>​    net stop 服务名（停止服务）</p><h3 id="MySQL服务的登录和退出"><a href="#MySQL服务的登录和退出" class="headerlink" title="MySQL服务的登录和退出"></a>MySQL服务的登录和退出</h3><p>​    方式一：通过mysql自带的客户端只限于root用户</p><p>​    方式二：通过Windows自带的客户端</p><p>​    登录：</p><p>​    mysql [-h主机名 -P端口号] -u用户名 -p密码            密码前不能加空格，其它可以</p><p>​    退出：</p><p>​    exit或ctrl+c</p><h3 id="MySQL的常见命令"><a href="#MySQL的常见命令" class="headerlink" title="MySQL的常见命令"></a>MySQL的常见命令</h3><p>​    1.查看当前所有的数据库</p><pre><code>show databases;</code></pre><p>​    2.打开指定的库</p><pre><code>use 库名;</code></pre><p>​    3.查看当前库的所有表</p><pre><code>show tables;</code></pre><p>​    4.查看其它库的所有表</p><pre><code>show tables from 库名;</code></pre><p>​    5.创建表</p><pre><code>creat table 表名(    列名 列类型，    列名 列类型，    。。。);</code></pre><p>​    6.查看表结构</p><pre><code>desc 表名;</code></pre><p>​    7.查看服务器的版本</p><pre><code>方式一：登录到mysql服务端select version();方式二：没有登录到mysql服务端mysql --version或mysql --V</code></pre><h3 id="MySQL的语法规范"><a href="#MySQL的语法规范" class="headerlink" title="MySQL的语法规范"></a>MySQL的语法规范</h3><p>​    1.不区分大小写，但建议关键字大写，表名，列名小写</p><p>​    2.每条命令最好用分号结尾</p><p>​    3.每条命令根据需要，可以进行缩进 或换行</p><p>​    4.注释:    (1)单行注释：#注释文字</p><p>​                    (2)单行注释：</p><pre><code>-- 注释文字(--后得有空格)</code></pre><p>​                    (3)多行注释：</p><pre><code>/*注释文字*/</code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2数据库存储数据的特点</title>
      <link href="2021/05/12/2%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E7%9A%84%E7%89%B9%E7%82%B9/"/>
      <url>2021/05/12/2%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E7%9A%84%E7%89%B9%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库存储数据的特点"><a href="#数据库存储数据的特点" class="headerlink" title="数据库存储数据的特点"></a>数据库存储数据的特点</h2><p>​    1.将数据放到表中，表再放到库中</p><p>​    2.一个数据库中可以有多个表，每个表都有一个名字，用来标识自己。表名具有唯一性。</p><p>​    3.表具有一些特性，这些特性定义了数据在表中如何存储，类似java中“类”的设计。</p><p>​    4.表由列组成，我们也称为字段。所有表都是由一个或多个列组成的，每一列类似java中的“属性”。</p><p>​    5.表中的数据是按行存储的，每一行类似于java中的“对象”。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1数据库的相关概念</title>
      <link href="2021/05/12/1%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
      <url>2021/05/12/1%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库相关概念"><a href="#数据库相关概念" class="headerlink" title="数据库相关概念"></a>数据库相关概念</h2><p>​    1、DB：数据库(database)，存储数据的”仓库“。它保存了一系列有组织的数据。</p><p>​    2、DBMS：数据库管理系统(Database Management System)。数据库是通过DBMS创建和操作的容器。</p><p>​    3、SQL：结构化查询语言(Structure Query Language)，专门用来与数据库通信的语言。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/11/22/hello-world/"/>
      <url>2020/11/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
